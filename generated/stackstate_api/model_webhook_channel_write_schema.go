/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// WebhookChannelWriteSchema struct for WebhookChannelWriteSchema
type WebhookChannelWriteSchema struct {
	Url       string            `json:"url"`
	Token     string            `json:"token"`
	VerifySsl bool              `json:"verifySsl"`
	Metadata  map[string]string `json:"metadata"`
}

// NewWebhookChannelWriteSchema instantiates a new WebhookChannelWriteSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookChannelWriteSchema(url string, token string, verifySsl bool, metadata map[string]string) *WebhookChannelWriteSchema {
	this := WebhookChannelWriteSchema{}
	this.Url = url
	this.Token = token
	this.VerifySsl = verifySsl
	this.Metadata = metadata
	return &this
}

// NewWebhookChannelWriteSchemaWithDefaults instantiates a new WebhookChannelWriteSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookChannelWriteSchemaWithDefaults() *WebhookChannelWriteSchema {
	this := WebhookChannelWriteSchema{}
	return &this
}

// GetUrl returns the Url field value
func (o *WebhookChannelWriteSchema) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookChannelWriteSchema) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookChannelWriteSchema) SetUrl(v string) {
	o.Url = v
}

// GetToken returns the Token field value
func (o *WebhookChannelWriteSchema) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *WebhookChannelWriteSchema) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *WebhookChannelWriteSchema) SetToken(v string) {
	o.Token = v
}

// GetVerifySsl returns the VerifySsl field value
func (o *WebhookChannelWriteSchema) GetVerifySsl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VerifySsl
}

// GetVerifySslOk returns a tuple with the VerifySsl field value
// and a boolean to check if the value has been set.
func (o *WebhookChannelWriteSchema) GetVerifySslOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerifySsl, true
}

// SetVerifySsl sets field value
func (o *WebhookChannelWriteSchema) SetVerifySsl(v bool) {
	o.VerifySsl = v
}

// GetMetadata returns the Metadata field value
func (o *WebhookChannelWriteSchema) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *WebhookChannelWriteSchema) GetMetadataOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *WebhookChannelWriteSchema) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o WebhookChannelWriteSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["verifySsl"] = o.VerifySsl
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookChannelWriteSchema struct {
	value *WebhookChannelWriteSchema
	isSet bool
}

func (v NullableWebhookChannelWriteSchema) Get() *WebhookChannelWriteSchema {
	return v.value
}

func (v *NullableWebhookChannelWriteSchema) Set(val *WebhookChannelWriteSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookChannelWriteSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookChannelWriteSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookChannelWriteSchema(val *WebhookChannelWriteSchema) *NullableWebhookChannelWriteSchema {
	return &NullableWebhookChannelWriteSchema{value: val, isSet: true}
}

func (v NullableWebhookChannelWriteSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookChannelWriteSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
