/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// OtelMappingMetrics struct for OtelMappingMetrics
type OtelMappingMetrics struct {
	BucketSizeSeconds int32               `json:"bucketSizeSeconds"`
	LatencySeconds    []MetricBucketValue `json:"latencySeconds,omitempty"`
}

// NewOtelMappingMetrics instantiates a new OtelMappingMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtelMappingMetrics(bucketSizeSeconds int32) *OtelMappingMetrics {
	this := OtelMappingMetrics{}
	this.BucketSizeSeconds = bucketSizeSeconds
	return &this
}

// NewOtelMappingMetricsWithDefaults instantiates a new OtelMappingMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtelMappingMetricsWithDefaults() *OtelMappingMetrics {
	this := OtelMappingMetrics{}
	return &this
}

// GetBucketSizeSeconds returns the BucketSizeSeconds field value
func (o *OtelMappingMetrics) GetBucketSizeSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BucketSizeSeconds
}

// GetBucketSizeSecondsOk returns a tuple with the BucketSizeSeconds field value
// and a boolean to check if the value has been set.
func (o *OtelMappingMetrics) GetBucketSizeSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketSizeSeconds, true
}

// SetBucketSizeSeconds sets field value
func (o *OtelMappingMetrics) SetBucketSizeSeconds(v int32) {
	o.BucketSizeSeconds = v
}

// GetLatencySeconds returns the LatencySeconds field value if set, zero value otherwise.
func (o *OtelMappingMetrics) GetLatencySeconds() []MetricBucketValue {
	if o == nil || o.LatencySeconds == nil {
		var ret []MetricBucketValue
		return ret
	}
	return o.LatencySeconds
}

// GetLatencySecondsOk returns a tuple with the LatencySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelMappingMetrics) GetLatencySecondsOk() ([]MetricBucketValue, bool) {
	if o == nil || o.LatencySeconds == nil {
		return nil, false
	}
	return o.LatencySeconds, true
}

// HasLatencySeconds returns a boolean if a field has been set.
func (o *OtelMappingMetrics) HasLatencySeconds() bool {
	if o != nil && o.LatencySeconds != nil {
		return true
	}

	return false
}

// SetLatencySeconds gets a reference to the given []MetricBucketValue and assigns it to the LatencySeconds field.
func (o *OtelMappingMetrics) SetLatencySeconds(v []MetricBucketValue) {
	o.LatencySeconds = v
}

func (o OtelMappingMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bucketSizeSeconds"] = o.BucketSizeSeconds
	}
	if o.LatencySeconds != nil {
		toSerialize["latencySeconds"] = o.LatencySeconds
	}
	return json.Marshal(toSerialize)
}

type NullableOtelMappingMetrics struct {
	value *OtelMappingMetrics
	isSet bool
}

func (v NullableOtelMappingMetrics) Get() *OtelMappingMetrics {
	return v.value
}

func (v *NullableOtelMappingMetrics) Set(val *OtelMappingMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableOtelMappingMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableOtelMappingMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtelMappingMetrics(val *OtelMappingMetrics) *NullableOtelMappingMetrics {
	return &NullableOtelMappingMetrics{value: val, isSet: true}
}

func (v NullableOtelMappingMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtelMappingMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
