/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// DataResult struct for DataResult
type DataResult struct {
	Metric []ValueTuple `json:"metric"`
	Values []ValueTuple `json:"values"`
}

// NewDataResult instantiates a new DataResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataResult(metric []ValueTuple, values []ValueTuple) *DataResult {
	this := DataResult{}
	this.Metric = metric
	this.Values = values
	return &this
}

// NewDataResultWithDefaults instantiates a new DataResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataResultWithDefaults() *DataResult {
	this := DataResult{}
	return &this
}

// GetMetric returns the Metric field value
func (o *DataResult) GetMetric() []ValueTuple {
	if o == nil {
		var ret []ValueTuple
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *DataResult) GetMetricOk() ([]ValueTuple, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metric, true
}

// SetMetric sets field value
func (o *DataResult) SetMetric(v []ValueTuple) {
	o.Metric = v
}

// GetValues returns the Values field value
func (o *DataResult) GetValues() []ValueTuple {
	if o == nil {
		var ret []ValueTuple
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *DataResult) GetValuesOk() ([]ValueTuple, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *DataResult) SetValues(v []ValueTuple) {
	o.Values = v
}

func (o DataResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metric"] = o.Metric
	}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableDataResult struct {
	value *DataResult
	isSet bool
}

func (v NullableDataResult) Get() *DataResult {
	return v.value
}

func (v *NullableDataResult) Set(val *DataResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDataResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDataResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataResult(val *DataResult) *NullableDataResult {
	return &NullableDataResult{value: val, isSet: true}
}

func (v NullableDataResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


