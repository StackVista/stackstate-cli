/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// SlackNotificationChannel struct for SlackNotificationChannel
type SlackNotificationChannel struct {
	Id                          int64                     `json:"id"`
	NotificationConfigurationId *int64                    `json:"notificationConfigurationId,omitempty"`
	Status                      NotificationChannelStatus `json:"status"`
	Type                        string                    `json:"_type"`
	SlackWorkspace              string                    `json:"slackWorkspace"`
	SlackChannel                *string                   `json:"slackChannel,omitempty"`
	SlackChannelId              *string                   `json:"slackChannelId,omitempty"`
}

// NewSlackNotificationChannel instantiates a new SlackNotificationChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackNotificationChannel(id int64, status NotificationChannelStatus, type_ string, slackWorkspace string) *SlackNotificationChannel {
	this := SlackNotificationChannel{}
	this.Id = id
	this.Status = status
	this.Type = type_
	this.SlackWorkspace = slackWorkspace
	return &this
}

// NewSlackNotificationChannelWithDefaults instantiates a new SlackNotificationChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackNotificationChannelWithDefaults() *SlackNotificationChannel {
	this := SlackNotificationChannel{}
	return &this
}

// GetId returns the Id field value
func (o *SlackNotificationChannel) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SlackNotificationChannel) SetId(v int64) {
	o.Id = v
}

// GetNotificationConfigurationId returns the NotificationConfigurationId field value if set, zero value otherwise.
func (o *SlackNotificationChannel) GetNotificationConfigurationId() int64 {
	if o == nil || o.NotificationConfigurationId == nil {
		var ret int64
		return ret
	}
	return *o.NotificationConfigurationId
}

// GetNotificationConfigurationIdOk returns a tuple with the NotificationConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetNotificationConfigurationIdOk() (*int64, bool) {
	if o == nil || o.NotificationConfigurationId == nil {
		return nil, false
	}
	return o.NotificationConfigurationId, true
}

// HasNotificationConfigurationId returns a boolean if a field has been set.
func (o *SlackNotificationChannel) HasNotificationConfigurationId() bool {
	if o != nil && o.NotificationConfigurationId != nil {
		return true
	}

	return false
}

// SetNotificationConfigurationId gets a reference to the given int64 and assigns it to the NotificationConfigurationId field.
func (o *SlackNotificationChannel) SetNotificationConfigurationId(v int64) {
	o.NotificationConfigurationId = &v
}

// GetStatus returns the Status field value
func (o *SlackNotificationChannel) GetStatus() NotificationChannelStatus {
	if o == nil {
		var ret NotificationChannelStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetStatusOk() (*NotificationChannelStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SlackNotificationChannel) SetStatus(v NotificationChannelStatus) {
	o.Status = v
}

// GetType returns the Type field value
func (o *SlackNotificationChannel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SlackNotificationChannel) SetType(v string) {
	o.Type = v
}

// GetSlackWorkspace returns the SlackWorkspace field value
func (o *SlackNotificationChannel) GetSlackWorkspace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SlackWorkspace
}

// GetSlackWorkspaceOk returns a tuple with the SlackWorkspace field value
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetSlackWorkspaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlackWorkspace, true
}

// SetSlackWorkspace sets field value
func (o *SlackNotificationChannel) SetSlackWorkspace(v string) {
	o.SlackWorkspace = v
}

// GetSlackChannel returns the SlackChannel field value if set, zero value otherwise.
func (o *SlackNotificationChannel) GetSlackChannel() string {
	if o == nil || o.SlackChannel == nil {
		var ret string
		return ret
	}
	return *o.SlackChannel
}

// GetSlackChannelOk returns a tuple with the SlackChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetSlackChannelOk() (*string, bool) {
	if o == nil || o.SlackChannel == nil {
		return nil, false
	}
	return o.SlackChannel, true
}

// HasSlackChannel returns a boolean if a field has been set.
func (o *SlackNotificationChannel) HasSlackChannel() bool {
	if o != nil && o.SlackChannel != nil {
		return true
	}

	return false
}

// SetSlackChannel gets a reference to the given string and assigns it to the SlackChannel field.
func (o *SlackNotificationChannel) SetSlackChannel(v string) {
	o.SlackChannel = &v
}

// GetSlackChannelId returns the SlackChannelId field value if set, zero value otherwise.
func (o *SlackNotificationChannel) GetSlackChannelId() string {
	if o == nil || o.SlackChannelId == nil {
		var ret string
		return ret
	}
	return *o.SlackChannelId
}

// GetSlackChannelIdOk returns a tuple with the SlackChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackNotificationChannel) GetSlackChannelIdOk() (*string, bool) {
	if o == nil || o.SlackChannelId == nil {
		return nil, false
	}
	return o.SlackChannelId, true
}

// HasSlackChannelId returns a boolean if a field has been set.
func (o *SlackNotificationChannel) HasSlackChannelId() bool {
	if o != nil && o.SlackChannelId != nil {
		return true
	}

	return false
}

// SetSlackChannelId gets a reference to the given string and assigns it to the SlackChannelId field.
func (o *SlackNotificationChannel) SetSlackChannelId(v string) {
	o.SlackChannelId = &v
}

func (o SlackNotificationChannel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.NotificationConfigurationId != nil {
		toSerialize["notificationConfigurationId"] = o.NotificationConfigurationId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["slackWorkspace"] = o.SlackWorkspace
	}
	if o.SlackChannel != nil {
		toSerialize["slackChannel"] = o.SlackChannel
	}
	if o.SlackChannelId != nil {
		toSerialize["slackChannelId"] = o.SlackChannelId
	}
	return json.Marshal(toSerialize)
}

type NullableSlackNotificationChannel struct {
	value *SlackNotificationChannel
	isSet bool
}

func (v NullableSlackNotificationChannel) Get() *SlackNotificationChannel {
	return v.value
}

func (v *NullableSlackNotificationChannel) Set(val *SlackNotificationChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackNotificationChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackNotificationChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackNotificationChannel(val *SlackNotificationChannel) *NullableSlackNotificationChannel {
	return &NullableSlackNotificationChannel{value: val, isSet: true}
}

func (v NullableSlackNotificationChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackNotificationChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
