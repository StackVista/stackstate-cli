/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// UserProfile struct for UserProfile
type UserProfile struct {
	Id                         *int64   `json:"id,omitempty"`
	LastUpdateTimestamp        *int64   `json:"lastUpdateTimestamp,omitempty"`
	Name                       string   `json:"name"`
	Description                *string  `json:"description,omitempty"`
	Identifier                 *string  `json:"identifier,omitempty"`
	StarredViews               []int64  `json:"starredViews,omitempty"`
	SystemNotificationsRead    []string `json:"systemNotificationsRead"`
	HideUnavailableMonitors    bool     `json:"hideUnavailableMonitors"`
	HideUnavailableMetrics     bool     `json:"hideUnavailableMetrics"`
	HideUnavailableConnections bool     `json:"hideUnavailableConnections"`
	OwnedBy                    *string  `json:"ownedBy,omitempty"`
}

// NewUserProfile instantiates a new UserProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserProfile(name string, systemNotificationsRead []string, hideUnavailableMonitors bool, hideUnavailableMetrics bool, hideUnavailableConnections bool) *UserProfile {
	this := UserProfile{}
	this.Name = name
	this.SystemNotificationsRead = systemNotificationsRead
	this.HideUnavailableMonitors = hideUnavailableMonitors
	this.HideUnavailableMetrics = hideUnavailableMetrics
	this.HideUnavailableConnections = hideUnavailableConnections
	return &this
}

// NewUserProfileWithDefaults instantiates a new UserProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserProfileWithDefaults() *UserProfile {
	this := UserProfile{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserProfile) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserProfile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UserProfile) SetId(v int64) {
	o.Id = &v
}

// GetLastUpdateTimestamp returns the LastUpdateTimestamp field value if set, zero value otherwise.
func (o *UserProfile) GetLastUpdateTimestamp() int64 {
	if o == nil || o.LastUpdateTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastUpdateTimestamp
}

// GetLastUpdateTimestampOk returns a tuple with the LastUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetLastUpdateTimestampOk() (*int64, bool) {
	if o == nil || o.LastUpdateTimestamp == nil {
		return nil, false
	}
	return o.LastUpdateTimestamp, true
}

// HasLastUpdateTimestamp returns a boolean if a field has been set.
func (o *UserProfile) HasLastUpdateTimestamp() bool {
	if o != nil && o.LastUpdateTimestamp != nil {
		return true
	}

	return false
}

// SetLastUpdateTimestamp gets a reference to the given int64 and assigns it to the LastUpdateTimestamp field.
func (o *UserProfile) SetLastUpdateTimestamp(v int64) {
	o.LastUpdateTimestamp = &v
}

// GetName returns the Name field value
func (o *UserProfile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserProfile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserProfile) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UserProfile) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UserProfile) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UserProfile) SetDescription(v string) {
	o.Description = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *UserProfile) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *UserProfile) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *UserProfile) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetStarredViews returns the StarredViews field value if set, zero value otherwise.
func (o *UserProfile) GetStarredViews() []int64 {
	if o == nil || o.StarredViews == nil {
		var ret []int64
		return ret
	}
	return o.StarredViews
}

// GetStarredViewsOk returns a tuple with the StarredViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetStarredViewsOk() ([]int64, bool) {
	if o == nil || o.StarredViews == nil {
		return nil, false
	}
	return o.StarredViews, true
}

// HasStarredViews returns a boolean if a field has been set.
func (o *UserProfile) HasStarredViews() bool {
	if o != nil && o.StarredViews != nil {
		return true
	}

	return false
}

// SetStarredViews gets a reference to the given []int64 and assigns it to the StarredViews field.
func (o *UserProfile) SetStarredViews(v []int64) {
	o.StarredViews = v
}

// GetSystemNotificationsRead returns the SystemNotificationsRead field value
func (o *UserProfile) GetSystemNotificationsRead() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SystemNotificationsRead
}

// GetSystemNotificationsReadOk returns a tuple with the SystemNotificationsRead field value
// and a boolean to check if the value has been set.
func (o *UserProfile) GetSystemNotificationsReadOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SystemNotificationsRead, true
}

// SetSystemNotificationsRead sets field value
func (o *UserProfile) SetSystemNotificationsRead(v []string) {
	o.SystemNotificationsRead = v
}

// GetHideUnavailableMonitors returns the HideUnavailableMonitors field value
func (o *UserProfile) GetHideUnavailableMonitors() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideUnavailableMonitors
}

// GetHideUnavailableMonitorsOk returns a tuple with the HideUnavailableMonitors field value
// and a boolean to check if the value has been set.
func (o *UserProfile) GetHideUnavailableMonitorsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideUnavailableMonitors, true
}

// SetHideUnavailableMonitors sets field value
func (o *UserProfile) SetHideUnavailableMonitors(v bool) {
	o.HideUnavailableMonitors = v
}

// GetHideUnavailableMetrics returns the HideUnavailableMetrics field value
func (o *UserProfile) GetHideUnavailableMetrics() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideUnavailableMetrics
}

// GetHideUnavailableMetricsOk returns a tuple with the HideUnavailableMetrics field value
// and a boolean to check if the value has been set.
func (o *UserProfile) GetHideUnavailableMetricsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideUnavailableMetrics, true
}

// SetHideUnavailableMetrics sets field value
func (o *UserProfile) SetHideUnavailableMetrics(v bool) {
	o.HideUnavailableMetrics = v
}

// GetHideUnavailableConnections returns the HideUnavailableConnections field value
func (o *UserProfile) GetHideUnavailableConnections() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideUnavailableConnections
}

// GetHideUnavailableConnectionsOk returns a tuple with the HideUnavailableConnections field value
// and a boolean to check if the value has been set.
func (o *UserProfile) GetHideUnavailableConnectionsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideUnavailableConnections, true
}

// SetHideUnavailableConnections sets field value
func (o *UserProfile) SetHideUnavailableConnections(v bool) {
	o.HideUnavailableConnections = v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *UserProfile) GetOwnedBy() string {
	if o == nil || o.OwnedBy == nil {
		var ret string
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfile) GetOwnedByOk() (*string, bool) {
	if o == nil || o.OwnedBy == nil {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *UserProfile) HasOwnedBy() bool {
	if o != nil && o.OwnedBy != nil {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given string and assigns it to the OwnedBy field.
func (o *UserProfile) SetOwnedBy(v string) {
	o.OwnedBy = &v
}

func (o UserProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastUpdateTimestamp != nil {
		toSerialize["lastUpdateTimestamp"] = o.LastUpdateTimestamp
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.StarredViews != nil {
		toSerialize["starredViews"] = o.StarredViews
	}
	if true {
		toSerialize["systemNotificationsRead"] = o.SystemNotificationsRead
	}
	if true {
		toSerialize["hideUnavailableMonitors"] = o.HideUnavailableMonitors
	}
	if true {
		toSerialize["hideUnavailableMetrics"] = o.HideUnavailableMetrics
	}
	if true {
		toSerialize["hideUnavailableConnections"] = o.HideUnavailableConnections
	}
	if o.OwnedBy != nil {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	return json.Marshal(toSerialize)
}

type NullableUserProfile struct {
	value *UserProfile
	isSet bool
}

func (v NullableUserProfile) Get() *UserProfile {
	return v.value
}

func (v *NullableUserProfile) Set(val *UserProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableUserProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableUserProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserProfile(val *UserProfile) *NullableUserProfile {
	return &NullableUserProfile{value: val, isSet: true}
}

func (v NullableUserProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
