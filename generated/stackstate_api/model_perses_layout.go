/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesLayout struct for PersesLayout
type PersesLayout struct {
	Kind PersesLayoutKind `json:"kind"`
	Spec PersesLayoutSpec `json:"spec"`
}

// NewPersesLayout instantiates a new PersesLayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesLayout(kind PersesLayoutKind, spec PersesLayoutSpec) *PersesLayout {
	this := PersesLayout{}
	this.Kind = kind
	this.Spec = spec
	return &this
}

// NewPersesLayoutWithDefaults instantiates a new PersesLayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesLayoutWithDefaults() *PersesLayout {
	this := PersesLayout{}
	return &this
}

// GetKind returns the Kind field value
func (o *PersesLayout) GetKind() PersesLayoutKind {
	if o == nil {
		var ret PersesLayoutKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PersesLayout) GetKindOk() (*PersesLayoutKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PersesLayout) SetKind(v PersesLayoutKind) {
	o.Kind = v
}

// GetSpec returns the Spec field value
func (o *PersesLayout) GetSpec() PersesLayoutSpec {
	if o == nil {
		var ret PersesLayoutSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *PersesLayout) GetSpecOk() (*PersesLayoutSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *PersesLayout) SetSpec(v PersesLayoutSpec) {
	o.Spec = v
}

func (o PersesLayout) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullablePersesLayout struct {
	value *PersesLayout
	isSet bool
}

func (v NullablePersesLayout) Get() *PersesLayout {
	return v.value
}

func (v *NullablePersesLayout) Set(val *PersesLayout) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesLayout) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesLayout(val *PersesLayout) *NullablePersesLayout {
	return &NullablePersesLayout{value: val, isSet: true}
}

func (v NullablePersesLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
