/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// Messages struct for Messages
type Messages struct {
	Messages []Message `json:"messages"`
}

// NewMessages instantiates a new Messages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessages(messages []Message) *Messages {
	this := Messages{}
	this.Messages = messages
	return &this
}

// NewMessagesWithDefaults instantiates a new Messages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagesWithDefaults() *Messages {
	this := Messages{}
	return &this
}

// GetMessages returns the Messages field value
func (o *Messages) GetMessages() []Message {
	if o == nil {
		var ret []Message
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *Messages) GetMessagesOk() ([]Message, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *Messages) SetMessages(v []Message) {
	o.Messages = v
}

func (o Messages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableMessages struct {
	value *Messages
	isSet bool
}

func (v NullableMessages) Get() *Messages {
	return v.value
}

func (v *NullableMessages) Set(val *Messages) {
	v.value = val
	v.isSet = true
}

func (v NullableMessages) IsSet() bool {
	return v.isSet
}

func (v *NullableMessages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessages(val *Messages) *NullableMessages {
	return &NullableMessages{value: val, isSet: true}
}

func (v NullableMessages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


