/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesGridLayoutDisplay struct for PersesGridLayoutDisplay
type PersesGridLayoutDisplay struct {
	// The title of the grid layout.
	Title    string                    `json:"title"`
	Collapse *PersesGridLayoutCollapse `json:"collapse,omitempty"`
}

// NewPersesGridLayoutDisplay instantiates a new PersesGridLayoutDisplay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesGridLayoutDisplay(title string) *PersesGridLayoutDisplay {
	this := PersesGridLayoutDisplay{}
	this.Title = title
	return &this
}

// NewPersesGridLayoutDisplayWithDefaults instantiates a new PersesGridLayoutDisplay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesGridLayoutDisplayWithDefaults() *PersesGridLayoutDisplay {
	this := PersesGridLayoutDisplay{}
	return &this
}

// GetTitle returns the Title field value
func (o *PersesGridLayoutDisplay) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PersesGridLayoutDisplay) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PersesGridLayoutDisplay) SetTitle(v string) {
	o.Title = v
}

// GetCollapse returns the Collapse field value if set, zero value otherwise.
func (o *PersesGridLayoutDisplay) GetCollapse() PersesGridLayoutCollapse {
	if o == nil || o.Collapse == nil {
		var ret PersesGridLayoutCollapse
		return ret
	}
	return *o.Collapse
}

// GetCollapseOk returns a tuple with the Collapse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesGridLayoutDisplay) GetCollapseOk() (*PersesGridLayoutCollapse, bool) {
	if o == nil || o.Collapse == nil {
		return nil, false
	}
	return o.Collapse, true
}

// HasCollapse returns a boolean if a field has been set.
func (o *PersesGridLayoutDisplay) HasCollapse() bool {
	if o != nil && o.Collapse != nil {
		return true
	}

	return false
}

// SetCollapse gets a reference to the given PersesGridLayoutCollapse and assigns it to the Collapse field.
func (o *PersesGridLayoutDisplay) SetCollapse(v PersesGridLayoutCollapse) {
	o.Collapse = &v
}

func (o PersesGridLayoutDisplay) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if o.Collapse != nil {
		toSerialize["collapse"] = o.Collapse
	}
	return json.Marshal(toSerialize)
}

type NullablePersesGridLayoutDisplay struct {
	value *PersesGridLayoutDisplay
	isSet bool
}

func (v NullablePersesGridLayoutDisplay) Get() *PersesGridLayoutDisplay {
	return v.value
}

func (v *NullablePersesGridLayoutDisplay) Set(val *PersesGridLayoutDisplay) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesGridLayoutDisplay) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesGridLayoutDisplay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesGridLayoutDisplay(val *PersesGridLayoutDisplay) *NullablePersesGridLayoutDisplay {
	return &NullablePersesGridLayoutDisplay{value: val, isSet: true}
}

func (v NullablePersesGridLayoutDisplay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesGridLayoutDisplay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
