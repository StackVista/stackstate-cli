/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// NotificationChannelStatusError struct for NotificationChannelStatusError
type NotificationChannelStatusError struct {
	Category    string `json:"category"`
	Count       int32  `json:"count"`
	Message     string `json:"message"`
	FirstSeenMs int32  `json:"firstSeenMs"`
}

// NewNotificationChannelStatusError instantiates a new NotificationChannelStatusError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationChannelStatusError(category string, count int32, message string, firstSeenMs int32) *NotificationChannelStatusError {
	this := NotificationChannelStatusError{}
	this.Category = category
	this.Count = count
	this.Message = message
	this.FirstSeenMs = firstSeenMs
	return &this
}

// NewNotificationChannelStatusErrorWithDefaults instantiates a new NotificationChannelStatusError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationChannelStatusErrorWithDefaults() *NotificationChannelStatusError {
	this := NotificationChannelStatusError{}
	return &this
}

// GetCategory returns the Category field value
func (o *NotificationChannelStatusError) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *NotificationChannelStatusError) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *NotificationChannelStatusError) SetCategory(v string) {
	o.Category = v
}

// GetCount returns the Count field value
func (o *NotificationChannelStatusError) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *NotificationChannelStatusError) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *NotificationChannelStatusError) SetCount(v int32) {
	o.Count = v
}

// GetMessage returns the Message field value
func (o *NotificationChannelStatusError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NotificationChannelStatusError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *NotificationChannelStatusError) SetMessage(v string) {
	o.Message = v
}

// GetFirstSeenMs returns the FirstSeenMs field value
func (o *NotificationChannelStatusError) GetFirstSeenMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FirstSeenMs
}

// GetFirstSeenMsOk returns a tuple with the FirstSeenMs field value
// and a boolean to check if the value has been set.
func (o *NotificationChannelStatusError) GetFirstSeenMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstSeenMs, true
}

// SetFirstSeenMs sets field value
func (o *NotificationChannelStatusError) SetFirstSeenMs(v int32) {
	o.FirstSeenMs = v
}

func (o NotificationChannelStatusError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["count"] = o.Count
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["firstSeenMs"] = o.FirstSeenMs
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationChannelStatusError struct {
	value *NotificationChannelStatusError
	isSet bool
}

func (v NullableNotificationChannelStatusError) Get() *NotificationChannelStatusError {
	return v.value
}

func (v *NullableNotificationChannelStatusError) Set(val *NotificationChannelStatusError) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationChannelStatusError) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationChannelStatusError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationChannelStatusError(val *NotificationChannelStatusError) *NullableNotificationChannelStatusError {
	return &NullableNotificationChannelStatusError{value: val, isSet: true}
}

func (v NullableNotificationChannelStatusError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationChannelStatusError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
