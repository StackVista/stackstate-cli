/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TooManyAnomaliesError struct for TooManyAnomaliesError
type TooManyAnomaliesError struct {
	Message string `json:"message"`
	NumberOfMatches *int64 `json:"numberOfMatches,omitempty"`
	MaxAllowed *int64 `json:"maxAllowed,omitempty"`
}

// NewTooManyAnomaliesError instantiates a new TooManyAnomaliesError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTooManyAnomaliesError(message string) *TooManyAnomaliesError {
	this := TooManyAnomaliesError{}
	this.Message = message
	return &this
}

// NewTooManyAnomaliesErrorWithDefaults instantiates a new TooManyAnomaliesError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTooManyAnomaliesErrorWithDefaults() *TooManyAnomaliesError {
	this := TooManyAnomaliesError{}
	return &this
}

// GetMessage returns the Message field value
func (o *TooManyAnomaliesError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TooManyAnomaliesError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TooManyAnomaliesError) SetMessage(v string) {
	o.Message = v
}

// GetNumberOfMatches returns the NumberOfMatches field value if set, zero value otherwise.
func (o *TooManyAnomaliesError) GetNumberOfMatches() int64 {
	if o == nil || o.NumberOfMatches == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfMatches
}

// GetNumberOfMatchesOk returns a tuple with the NumberOfMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooManyAnomaliesError) GetNumberOfMatchesOk() (*int64, bool) {
	if o == nil || o.NumberOfMatches == nil {
		return nil, false
	}
	return o.NumberOfMatches, true
}

// HasNumberOfMatches returns a boolean if a field has been set.
func (o *TooManyAnomaliesError) HasNumberOfMatches() bool {
	if o != nil && o.NumberOfMatches != nil {
		return true
	}

	return false
}

// SetNumberOfMatches gets a reference to the given int64 and assigns it to the NumberOfMatches field.
func (o *TooManyAnomaliesError) SetNumberOfMatches(v int64) {
	o.NumberOfMatches = &v
}

// GetMaxAllowed returns the MaxAllowed field value if set, zero value otherwise.
func (o *TooManyAnomaliesError) GetMaxAllowed() int64 {
	if o == nil || o.MaxAllowed == nil {
		var ret int64
		return ret
	}
	return *o.MaxAllowed
}

// GetMaxAllowedOk returns a tuple with the MaxAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooManyAnomaliesError) GetMaxAllowedOk() (*int64, bool) {
	if o == nil || o.MaxAllowed == nil {
		return nil, false
	}
	return o.MaxAllowed, true
}

// HasMaxAllowed returns a boolean if a field has been set.
func (o *TooManyAnomaliesError) HasMaxAllowed() bool {
	if o != nil && o.MaxAllowed != nil {
		return true
	}

	return false
}

// SetMaxAllowed gets a reference to the given int64 and assigns it to the MaxAllowed field.
func (o *TooManyAnomaliesError) SetMaxAllowed(v int64) {
	o.MaxAllowed = &v
}

func (o TooManyAnomaliesError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.NumberOfMatches != nil {
		toSerialize["numberOfMatches"] = o.NumberOfMatches
	}
	if o.MaxAllowed != nil {
		toSerialize["maxAllowed"] = o.MaxAllowed
	}
	return json.Marshal(toSerialize)
}

type NullableTooManyAnomaliesError struct {
	value *TooManyAnomaliesError
	isSet bool
}

func (v NullableTooManyAnomaliesError) Get() *TooManyAnomaliesError {
	return v.value
}

func (v *NullableTooManyAnomaliesError) Set(val *TooManyAnomaliesError) {
	v.value = val
	v.isSet = true
}

func (v NullableTooManyAnomaliesError) IsSet() bool {
	return v.isSet
}

func (v *NullableTooManyAnomaliesError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTooManyAnomaliesError(val *TooManyAnomaliesError) *NullableTooManyAnomaliesError {
	return &NullableTooManyAnomaliesError{value: val, isSet: true}
}

func (v NullableTooManyAnomaliesError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTooManyAnomaliesError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


