/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TopologyPromQLMetric struct for TopologyPromQLMetric
type TopologyPromQLMetric struct {
	Type          string `json:"_type"`
	Id            *int64 `json:"id,omitempty"`
	PromQLQuery   string `json:"promQLQuery"`
	Unit          string `json:"unit"`
	AliasTemplate string `json:"aliasTemplate"`
	TopologyQuery string `json:"topologyQuery"`
}

// NewTopologyPromQLMetric instantiates a new TopologyPromQLMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopologyPromQLMetric(type_ string, promQLQuery string, unit string, aliasTemplate string, topologyQuery string) *TopologyPromQLMetric {
	this := TopologyPromQLMetric{}
	this.Type = type_
	this.PromQLQuery = promQLQuery
	this.Unit = unit
	this.AliasTemplate = aliasTemplate
	this.TopologyQuery = topologyQuery
	return &this
}

// NewTopologyPromQLMetricWithDefaults instantiates a new TopologyPromQLMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopologyPromQLMetricWithDefaults() *TopologyPromQLMetric {
	this := TopologyPromQLMetric{}
	return &this
}

// GetType returns the Type field value
func (o *TopologyPromQLMetric) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TopologyPromQLMetric) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TopologyPromQLMetric) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TopologyPromQLMetric) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TopologyPromQLMetric) SetId(v int64) {
	o.Id = &v
}

// GetPromQLQuery returns the PromQLQuery field value
func (o *TopologyPromQLMetric) GetPromQLQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromQLQuery
}

// GetPromQLQueryOk returns a tuple with the PromQLQuery field value
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetPromQLQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromQLQuery, true
}

// SetPromQLQuery sets field value
func (o *TopologyPromQLMetric) SetPromQLQuery(v string) {
	o.PromQLQuery = v
}

// GetUnit returns the Unit field value
func (o *TopologyPromQLMetric) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *TopologyPromQLMetric) SetUnit(v string) {
	o.Unit = v
}

// GetAliasTemplate returns the AliasTemplate field value
func (o *TopologyPromQLMetric) GetAliasTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AliasTemplate
}

// GetAliasTemplateOk returns a tuple with the AliasTemplate field value
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetAliasTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AliasTemplate, true
}

// SetAliasTemplate sets field value
func (o *TopologyPromQLMetric) SetAliasTemplate(v string) {
	o.AliasTemplate = v
}

// GetTopologyQuery returns the TopologyQuery field value
func (o *TopologyPromQLMetric) GetTopologyQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TopologyQuery
}

// GetTopologyQueryOk returns a tuple with the TopologyQuery field value
// and a boolean to check if the value has been set.
func (o *TopologyPromQLMetric) GetTopologyQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopologyQuery, true
}

// SetTopologyQuery sets field value
func (o *TopologyPromQLMetric) SetTopologyQuery(v string) {
	o.TopologyQuery = v
}

func (o TopologyPromQLMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["promQLQuery"] = o.PromQLQuery
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["aliasTemplate"] = o.AliasTemplate
	}
	if true {
		toSerialize["topologyQuery"] = o.TopologyQuery
	}
	return json.Marshal(toSerialize)
}

type NullableTopologyPromQLMetric struct {
	value *TopologyPromQLMetric
	isSet bool
}

func (v NullableTopologyPromQLMetric) Get() *TopologyPromQLMetric {
	return v.value
}

func (v *NullableTopologyPromQLMetric) Set(val *TopologyPromQLMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableTopologyPromQLMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableTopologyPromQLMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopologyPromQLMetric(val *TopologyPromQLMetric) *NullableTopologyPromQLMetric {
	return &NullableTopologyPromQLMetric{value: val, isSet: true}
}

func (v NullableTopologyPromQLMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopologyPromQLMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
