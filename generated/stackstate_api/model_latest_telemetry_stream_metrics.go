/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// LatestTelemetryStreamMetrics struct for LatestTelemetryStreamMetrics
type LatestTelemetryStreamMetrics struct {
	Type     string        `json:"_type"`
	StreamId int64         `json:"streamId"`
	Metric   *SingleMetric `json:"metric,omitempty"`
}

// NewLatestTelemetryStreamMetrics instantiates a new LatestTelemetryStreamMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestTelemetryStreamMetrics(type_ string, streamId int64) *LatestTelemetryStreamMetrics {
	this := LatestTelemetryStreamMetrics{}
	this.Type = type_
	this.StreamId = streamId
	return &this
}

// NewLatestTelemetryStreamMetricsWithDefaults instantiates a new LatestTelemetryStreamMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestTelemetryStreamMetricsWithDefaults() *LatestTelemetryStreamMetrics {
	this := LatestTelemetryStreamMetrics{}
	return &this
}

// GetType returns the Type field value
func (o *LatestTelemetryStreamMetrics) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LatestTelemetryStreamMetrics) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LatestTelemetryStreamMetrics) SetType(v string) {
	o.Type = v
}

// GetStreamId returns the StreamId field value
func (o *LatestTelemetryStreamMetrics) GetStreamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value
// and a boolean to check if the value has been set.
func (o *LatestTelemetryStreamMetrics) GetStreamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreamId, true
}

// SetStreamId sets field value
func (o *LatestTelemetryStreamMetrics) SetStreamId(v int64) {
	o.StreamId = v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *LatestTelemetryStreamMetrics) GetMetric() SingleMetric {
	if o == nil || o.Metric == nil {
		var ret SingleMetric
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestTelemetryStreamMetrics) GetMetricOk() (*SingleMetric, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *LatestTelemetryStreamMetrics) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given SingleMetric and assigns it to the Metric field.
func (o *LatestTelemetryStreamMetrics) SetMetric(v SingleMetric) {
	o.Metric = &v
}

func (o LatestTelemetryStreamMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["streamId"] = o.StreamId
	}
	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	return json.Marshal(toSerialize)
}

type NullableLatestTelemetryStreamMetrics struct {
	value *LatestTelemetryStreamMetrics
	isSet bool
}

func (v NullableLatestTelemetryStreamMetrics) Get() *LatestTelemetryStreamMetrics {
	return v.value
}

func (v *NullableLatestTelemetryStreamMetrics) Set(val *LatestTelemetryStreamMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestTelemetryStreamMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestTelemetryStreamMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestTelemetryStreamMetrics(val *LatestTelemetryStreamMetrics) *NullableLatestTelemetryStreamMetrics {
	return &NullableLatestTelemetryStreamMetrics{value: val, isSet: true}
}

func (v NullableLatestTelemetryStreamMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestTelemetryStreamMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
