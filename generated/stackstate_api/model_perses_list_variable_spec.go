/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesListVariableSpec struct for PersesListVariableSpec
type PersesListVariableSpec struct {
	Name            string                          `json:"name"`
	Display         *PersesVariableDisplaySpec      `json:"display,omitempty"`
	DefaultValue    *PersesListVariableDefaultValue `json:"defaultValue,omitempty"`
	AllowAllValue   bool                            `json:"allowAllValue"`
	AllowMultiple   bool                            `json:"allowMultiple"`
	CustomAllValue  *string                         `json:"customAllValue,omitempty"`
	CapturingRegexp *string                         `json:"capturingRegexp,omitempty"`
	Sort            *PersesVariableSort             `json:"sort,omitempty"`
	Plugin          PersesPlugin                    `json:"plugin"`
}

// NewPersesListVariableSpec instantiates a new PersesListVariableSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesListVariableSpec(name string, allowAllValue bool, allowMultiple bool, plugin PersesPlugin) *PersesListVariableSpec {
	this := PersesListVariableSpec{}
	this.Name = name
	this.AllowAllValue = allowAllValue
	this.AllowMultiple = allowMultiple
	this.Plugin = plugin
	return &this
}

// NewPersesListVariableSpecWithDefaults instantiates a new PersesListVariableSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesListVariableSpecWithDefaults() *PersesListVariableSpec {
	this := PersesListVariableSpec{}
	return &this
}

// GetName returns the Name field value
func (o *PersesListVariableSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PersesListVariableSpec) SetName(v string) {
	o.Name = v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PersesListVariableSpec) GetDisplay() PersesVariableDisplaySpec {
	if o == nil || o.Display == nil {
		var ret PersesVariableDisplaySpec
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetDisplayOk() (*PersesVariableDisplaySpec, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PersesListVariableSpec) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given PersesVariableDisplaySpec and assigns it to the Display field.
func (o *PersesListVariableSpec) SetDisplay(v PersesVariableDisplaySpec) {
	o.Display = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *PersesListVariableSpec) GetDefaultValue() PersesListVariableDefaultValue {
	if o == nil || o.DefaultValue == nil {
		var ret PersesListVariableDefaultValue
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetDefaultValueOk() (*PersesListVariableDefaultValue, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *PersesListVariableSpec) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given PersesListVariableDefaultValue and assigns it to the DefaultValue field.
func (o *PersesListVariableSpec) SetDefaultValue(v PersesListVariableDefaultValue) {
	o.DefaultValue = &v
}

// GetAllowAllValue returns the AllowAllValue field value
func (o *PersesListVariableSpec) GetAllowAllValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowAllValue
}

// GetAllowAllValueOk returns a tuple with the AllowAllValue field value
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetAllowAllValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowAllValue, true
}

// SetAllowAllValue sets field value
func (o *PersesListVariableSpec) SetAllowAllValue(v bool) {
	o.AllowAllValue = v
}

// GetAllowMultiple returns the AllowMultiple field value
func (o *PersesListVariableSpec) GetAllowMultiple() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowMultiple
}

// GetAllowMultipleOk returns a tuple with the AllowMultiple field value
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetAllowMultipleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowMultiple, true
}

// SetAllowMultiple sets field value
func (o *PersesListVariableSpec) SetAllowMultiple(v bool) {
	o.AllowMultiple = v
}

// GetCustomAllValue returns the CustomAllValue field value if set, zero value otherwise.
func (o *PersesListVariableSpec) GetCustomAllValue() string {
	if o == nil || o.CustomAllValue == nil {
		var ret string
		return ret
	}
	return *o.CustomAllValue
}

// GetCustomAllValueOk returns a tuple with the CustomAllValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetCustomAllValueOk() (*string, bool) {
	if o == nil || o.CustomAllValue == nil {
		return nil, false
	}
	return o.CustomAllValue, true
}

// HasCustomAllValue returns a boolean if a field has been set.
func (o *PersesListVariableSpec) HasCustomAllValue() bool {
	if o != nil && o.CustomAllValue != nil {
		return true
	}

	return false
}

// SetCustomAllValue gets a reference to the given string and assigns it to the CustomAllValue field.
func (o *PersesListVariableSpec) SetCustomAllValue(v string) {
	o.CustomAllValue = &v
}

// GetCapturingRegexp returns the CapturingRegexp field value if set, zero value otherwise.
func (o *PersesListVariableSpec) GetCapturingRegexp() string {
	if o == nil || o.CapturingRegexp == nil {
		var ret string
		return ret
	}
	return *o.CapturingRegexp
}

// GetCapturingRegexpOk returns a tuple with the CapturingRegexp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetCapturingRegexpOk() (*string, bool) {
	if o == nil || o.CapturingRegexp == nil {
		return nil, false
	}
	return o.CapturingRegexp, true
}

// HasCapturingRegexp returns a boolean if a field has been set.
func (o *PersesListVariableSpec) HasCapturingRegexp() bool {
	if o != nil && o.CapturingRegexp != nil {
		return true
	}

	return false
}

// SetCapturingRegexp gets a reference to the given string and assigns it to the CapturingRegexp field.
func (o *PersesListVariableSpec) SetCapturingRegexp(v string) {
	o.CapturingRegexp = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *PersesListVariableSpec) GetSort() PersesVariableSort {
	if o == nil || o.Sort == nil {
		var ret PersesVariableSort
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetSortOk() (*PersesVariableSort, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *PersesListVariableSpec) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given PersesVariableSort and assigns it to the Sort field.
func (o *PersesListVariableSpec) SetSort(v PersesVariableSort) {
	o.Sort = &v
}

// GetPlugin returns the Plugin field value
func (o *PersesListVariableSpec) GetPlugin() PersesPlugin {
	if o == nil {
		var ret PersesPlugin
		return ret
	}

	return o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value
// and a boolean to check if the value has been set.
func (o *PersesListVariableSpec) GetPluginOk() (*PersesPlugin, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plugin, true
}

// SetPlugin sets field value
func (o *PersesListVariableSpec) SetPlugin(v PersesPlugin) {
	o.Plugin = v
}

func (o PersesListVariableSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if true {
		toSerialize["allowAllValue"] = o.AllowAllValue
	}
	if true {
		toSerialize["allowMultiple"] = o.AllowMultiple
	}
	if o.CustomAllValue != nil {
		toSerialize["customAllValue"] = o.CustomAllValue
	}
	if o.CapturingRegexp != nil {
		toSerialize["capturingRegexp"] = o.CapturingRegexp
	}
	if o.Sort != nil {
		toSerialize["sort"] = o.Sort
	}
	if true {
		toSerialize["plugin"] = o.Plugin
	}
	return json.Marshal(toSerialize)
}

type NullablePersesListVariableSpec struct {
	value *PersesListVariableSpec
	isSet bool
}

func (v NullablePersesListVariableSpec) Get() *PersesListVariableSpec {
	return v.value
}

func (v *NullablePersesListVariableSpec) Set(val *PersesListVariableSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesListVariableSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesListVariableSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesListVariableSpec(val *PersesListVariableSpec) *NullablePersesListVariableSpec {
	return &NullablePersesListVariableSpec{value: val, isSet: true}
}

func (v NullablePersesListVariableSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesListVariableSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
