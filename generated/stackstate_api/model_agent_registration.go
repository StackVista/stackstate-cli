/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// AgentRegistration struct for AgentRegistration
type AgentRegistration struct {
	AgentId           string     `json:"agentId"`
	Lease             AgentLease `json:"lease"`
	LeaseUntilEpochMs int64      `json:"leaseUntilEpochMs"`
	RegisteredEpochMs int64      `json:"registeredEpochMs"`
	AgentData         *AgentData `json:"agentData,omitempty"`
	// The registration might count for more than one standard (4CPU, 16Gb) node
	NodeBudgetCount int32 `json:"nodeBudgetCount"`
}

// NewAgentRegistration instantiates a new AgentRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentRegistration(agentId string, lease AgentLease, leaseUntilEpochMs int64, registeredEpochMs int64, nodeBudgetCount int32) *AgentRegistration {
	this := AgentRegistration{}
	this.AgentId = agentId
	this.Lease = lease
	this.LeaseUntilEpochMs = leaseUntilEpochMs
	this.RegisteredEpochMs = registeredEpochMs
	this.NodeBudgetCount = nodeBudgetCount
	return &this
}

// NewAgentRegistrationWithDefaults instantiates a new AgentRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentRegistrationWithDefaults() *AgentRegistration {
	this := AgentRegistration{}
	return &this
}

// GetAgentId returns the AgentId field value
func (o *AgentRegistration) GetAgentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentId, true
}

// SetAgentId sets field value
func (o *AgentRegistration) SetAgentId(v string) {
	o.AgentId = v
}

// GetLease returns the Lease field value
func (o *AgentRegistration) GetLease() AgentLease {
	if o == nil {
		var ret AgentLease
		return ret
	}

	return o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetLeaseOk() (*AgentLease, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lease, true
}

// SetLease sets field value
func (o *AgentRegistration) SetLease(v AgentLease) {
	o.Lease = v
}

// GetLeaseUntilEpochMs returns the LeaseUntilEpochMs field value
func (o *AgentRegistration) GetLeaseUntilEpochMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LeaseUntilEpochMs
}

// GetLeaseUntilEpochMsOk returns a tuple with the LeaseUntilEpochMs field value
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetLeaseUntilEpochMsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeaseUntilEpochMs, true
}

// SetLeaseUntilEpochMs sets field value
func (o *AgentRegistration) SetLeaseUntilEpochMs(v int64) {
	o.LeaseUntilEpochMs = v
}

// GetRegisteredEpochMs returns the RegisteredEpochMs field value
func (o *AgentRegistration) GetRegisteredEpochMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RegisteredEpochMs
}

// GetRegisteredEpochMsOk returns a tuple with the RegisteredEpochMs field value
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetRegisteredEpochMsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegisteredEpochMs, true
}

// SetRegisteredEpochMs sets field value
func (o *AgentRegistration) SetRegisteredEpochMs(v int64) {
	o.RegisteredEpochMs = v
}

// GetAgentData returns the AgentData field value if set, zero value otherwise.
func (o *AgentRegistration) GetAgentData() AgentData {
	if o == nil || o.AgentData == nil {
		var ret AgentData
		return ret
	}
	return *o.AgentData
}

// GetAgentDataOk returns a tuple with the AgentData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetAgentDataOk() (*AgentData, bool) {
	if o == nil || o.AgentData == nil {
		return nil, false
	}
	return o.AgentData, true
}

// HasAgentData returns a boolean if a field has been set.
func (o *AgentRegistration) HasAgentData() bool {
	if o != nil && o.AgentData != nil {
		return true
	}

	return false
}

// SetAgentData gets a reference to the given AgentData and assigns it to the AgentData field.
func (o *AgentRegistration) SetAgentData(v AgentData) {
	o.AgentData = &v
}

// GetNodeBudgetCount returns the NodeBudgetCount field value
func (o *AgentRegistration) GetNodeBudgetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NodeBudgetCount
}

// GetNodeBudgetCountOk returns a tuple with the NodeBudgetCount field value
// and a boolean to check if the value has been set.
func (o *AgentRegistration) GetNodeBudgetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeBudgetCount, true
}

// SetNodeBudgetCount sets field value
func (o *AgentRegistration) SetNodeBudgetCount(v int32) {
	o.NodeBudgetCount = v
}

func (o AgentRegistration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["agentId"] = o.AgentId
	}
	if true {
		toSerialize["lease"] = o.Lease
	}
	if true {
		toSerialize["leaseUntilEpochMs"] = o.LeaseUntilEpochMs
	}
	if true {
		toSerialize["registeredEpochMs"] = o.RegisteredEpochMs
	}
	if o.AgentData != nil {
		toSerialize["agentData"] = o.AgentData
	}
	if true {
		toSerialize["nodeBudgetCount"] = o.NodeBudgetCount
	}
	return json.Marshal(toSerialize)
}

type NullableAgentRegistration struct {
	value *AgentRegistration
	isSet bool
}

func (v NullableAgentRegistration) Get() *AgentRegistration {
	return v.value
}

func (v *NullableAgentRegistration) Set(val *AgentRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentRegistration(val *AgentRegistration) *NullableAgentRegistration {
	return &NullableAgentRegistration{value: val, isSet: true}
}

func (v NullableAgentRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
