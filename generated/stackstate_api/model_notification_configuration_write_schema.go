/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// NotificationConfigurationWriteSchema struct for NotificationConfigurationWriteSchema
type NotificationConfigurationWriteSchema struct {
	Name                 string                               `json:"name"`
	Identifier           *string                              `json:"identifier,omitempty"`
	Description          *string                              `json:"description,omitempty"`
	NotifyHealthStates   NotifyOnOptions                      `json:"notifyHealthStates"`
	Monitors             []MonitorReferenceId                 `json:"monitors"`
	MonitorTags          []string                             `json:"monitorTags"`
	ComponentTypeNames   []string                             `json:"componentTypeNames"`
	ComponentTags        []string                             `json:"componentTags"`
	Status               NotificationConfigurationStatusValue `json:"status"`
	NotificationChannels []ChannelReferenceId                 `json:"notificationChannels"`
}

// NewNotificationConfigurationWriteSchema instantiates a new NotificationConfigurationWriteSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationConfigurationWriteSchema(name string, notifyHealthStates NotifyOnOptions, monitors []MonitorReferenceId, monitorTags []string, componentTypeNames []string, componentTags []string, status NotificationConfigurationStatusValue, notificationChannels []ChannelReferenceId) *NotificationConfigurationWriteSchema {
	this := NotificationConfigurationWriteSchema{}
	this.Name = name
	this.NotifyHealthStates = notifyHealthStates
	this.Monitors = monitors
	this.MonitorTags = monitorTags
	this.ComponentTypeNames = componentTypeNames
	this.ComponentTags = componentTags
	this.Status = status
	this.NotificationChannels = notificationChannels
	return &this
}

// NewNotificationConfigurationWriteSchemaWithDefaults instantiates a new NotificationConfigurationWriteSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationConfigurationWriteSchemaWithDefaults() *NotificationConfigurationWriteSchema {
	this := NotificationConfigurationWriteSchema{}
	return &this
}

// GetName returns the Name field value
func (o *NotificationConfigurationWriteSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NotificationConfigurationWriteSchema) SetName(v string) {
	o.Name = v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *NotificationConfigurationWriteSchema) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *NotificationConfigurationWriteSchema) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *NotificationConfigurationWriteSchema) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NotificationConfigurationWriteSchema) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NotificationConfigurationWriteSchema) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NotificationConfigurationWriteSchema) SetDescription(v string) {
	o.Description = &v
}

// GetNotifyHealthStates returns the NotifyHealthStates field value
func (o *NotificationConfigurationWriteSchema) GetNotifyHealthStates() NotifyOnOptions {
	if o == nil {
		var ret NotifyOnOptions
		return ret
	}

	return o.NotifyHealthStates
}

// GetNotifyHealthStatesOk returns a tuple with the NotifyHealthStates field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetNotifyHealthStatesOk() (*NotifyOnOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifyHealthStates, true
}

// SetNotifyHealthStates sets field value
func (o *NotificationConfigurationWriteSchema) SetNotifyHealthStates(v NotifyOnOptions) {
	o.NotifyHealthStates = v
}

// GetMonitors returns the Monitors field value
func (o *NotificationConfigurationWriteSchema) GetMonitors() []MonitorReferenceId {
	if o == nil {
		var ret []MonitorReferenceId
		return ret
	}

	return o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetMonitorsOk() ([]MonitorReferenceId, bool) {
	if o == nil {
		return nil, false
	}
	return o.Monitors, true
}

// SetMonitors sets field value
func (o *NotificationConfigurationWriteSchema) SetMonitors(v []MonitorReferenceId) {
	o.Monitors = v
}

// GetMonitorTags returns the MonitorTags field value
func (o *NotificationConfigurationWriteSchema) GetMonitorTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MonitorTags
}

// GetMonitorTagsOk returns a tuple with the MonitorTags field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetMonitorTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MonitorTags, true
}

// SetMonitorTags sets field value
func (o *NotificationConfigurationWriteSchema) SetMonitorTags(v []string) {
	o.MonitorTags = v
}

// GetComponentTypeNames returns the ComponentTypeNames field value
func (o *NotificationConfigurationWriteSchema) GetComponentTypeNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ComponentTypeNames
}

// GetComponentTypeNamesOk returns a tuple with the ComponentTypeNames field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetComponentTypeNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComponentTypeNames, true
}

// SetComponentTypeNames sets field value
func (o *NotificationConfigurationWriteSchema) SetComponentTypeNames(v []string) {
	o.ComponentTypeNames = v
}

// GetComponentTags returns the ComponentTags field value
func (o *NotificationConfigurationWriteSchema) GetComponentTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ComponentTags
}

// GetComponentTagsOk returns a tuple with the ComponentTags field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetComponentTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComponentTags, true
}

// SetComponentTags sets field value
func (o *NotificationConfigurationWriteSchema) SetComponentTags(v []string) {
	o.ComponentTags = v
}

// GetStatus returns the Status field value
func (o *NotificationConfigurationWriteSchema) GetStatus() NotificationConfigurationStatusValue {
	if o == nil {
		var ret NotificationConfigurationStatusValue
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetStatusOk() (*NotificationConfigurationStatusValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NotificationConfigurationWriteSchema) SetStatus(v NotificationConfigurationStatusValue) {
	o.Status = v
}

// GetNotificationChannels returns the NotificationChannels field value
func (o *NotificationConfigurationWriteSchema) GetNotificationChannels() []ChannelReferenceId {
	if o == nil {
		var ret []ChannelReferenceId
		return ret
	}

	return o.NotificationChannels
}

// GetNotificationChannelsOk returns a tuple with the NotificationChannels field value
// and a boolean to check if the value has been set.
func (o *NotificationConfigurationWriteSchema) GetNotificationChannelsOk() ([]ChannelReferenceId, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotificationChannels, true
}

// SetNotificationChannels sets field value
func (o *NotificationConfigurationWriteSchema) SetNotificationChannels(v []ChannelReferenceId) {
	o.NotificationChannels = v
}

func (o NotificationConfigurationWriteSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["notifyHealthStates"] = o.NotifyHealthStates
	}
	if true {
		toSerialize["monitors"] = o.Monitors
	}
	if true {
		toSerialize["monitorTags"] = o.MonitorTags
	}
	if true {
		toSerialize["componentTypeNames"] = o.ComponentTypeNames
	}
	if true {
		toSerialize["componentTags"] = o.ComponentTags
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["notificationChannels"] = o.NotificationChannels
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationConfigurationWriteSchema struct {
	value *NotificationConfigurationWriteSchema
	isSet bool
}

func (v NullableNotificationConfigurationWriteSchema) Get() *NotificationConfigurationWriteSchema {
	return v.value
}

func (v *NullableNotificationConfigurationWriteSchema) Set(val *NotificationConfigurationWriteSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationConfigurationWriteSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationConfigurationWriteSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationConfigurationWriteSchema(val *NotificationConfigurationWriteSchema) *NullableNotificationConfigurationWriteSchema {
	return &NullableNotificationConfigurationWriteSchema{value: val, isSet: true}
}

func (v NullableNotificationConfigurationWriteSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationConfigurationWriteSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
