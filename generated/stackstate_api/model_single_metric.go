/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// SingleMetric struct for SingleMetric
type SingleMetric struct {
	Timestamp int64   `json:"timestamp"`
	Value     float32 `json:"value"`
}

// NewSingleMetric instantiates a new SingleMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleMetric(timestamp int64, value float32) *SingleMetric {
	this := SingleMetric{}
	this.Timestamp = timestamp
	this.Value = value
	return &this
}

// NewSingleMetricWithDefaults instantiates a new SingleMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleMetricWithDefaults() *SingleMetric {
	this := SingleMetric{}
	return &this
}

// GetTimestamp returns the Timestamp field value
func (o *SingleMetric) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *SingleMetric) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *SingleMetric) SetTimestamp(v int64) {
	o.Timestamp = v
}

// GetValue returns the Value field value
func (o *SingleMetric) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SingleMetric) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SingleMetric) SetValue(v float32) {
	o.Value = v
}

func (o SingleMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSingleMetric struct {
	value *SingleMetric
	isSet bool
}

func (v NullableSingleMetric) Get() *SingleMetric {
	return v.value
}

func (v *NullableSingleMetric) Set(val *SingleMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleMetric(val *SingleMetric) *NullableSingleMetric {
	return &NullableSingleMetric{value: val, isSet: true}
}

func (v NullableSingleMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
