/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesPanelSpec struct for PersesPanelSpec
type PersesPanelSpec struct {
	Display *PersesPanelDisplay `json:"display,omitempty"`
	Links   []PersesLink        `json:"links,omitempty"`
	Plugin  *PersesPlugin       `json:"plugin,omitempty"`
	Queries []PersesQuery       `json:"queries,omitempty"`
}

// NewPersesPanelSpec instantiates a new PersesPanelSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesPanelSpec() *PersesPanelSpec {
	this := PersesPanelSpec{}
	return &this
}

// NewPersesPanelSpecWithDefaults instantiates a new PersesPanelSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesPanelSpecWithDefaults() *PersesPanelSpec {
	this := PersesPanelSpec{}
	return &this
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PersesPanelSpec) GetDisplay() PersesPanelDisplay {
	if o == nil || o.Display == nil {
		var ret PersesPanelDisplay
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPanelSpec) GetDisplayOk() (*PersesPanelDisplay, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PersesPanelSpec) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given PersesPanelDisplay and assigns it to the Display field.
func (o *PersesPanelSpec) SetDisplay(v PersesPanelDisplay) {
	o.Display = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PersesPanelSpec) GetLinks() []PersesLink {
	if o == nil || o.Links == nil {
		var ret []PersesLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPanelSpec) GetLinksOk() ([]PersesLink, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PersesPanelSpec) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []PersesLink and assigns it to the Links field.
func (o *PersesPanelSpec) SetLinks(v []PersesLink) {
	o.Links = v
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *PersesPanelSpec) GetPlugin() PersesPlugin {
	if o == nil || o.Plugin == nil {
		var ret PersesPlugin
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPanelSpec) GetPluginOk() (*PersesPlugin, bool) {
	if o == nil || o.Plugin == nil {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *PersesPanelSpec) HasPlugin() bool {
	if o != nil && o.Plugin != nil {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given PersesPlugin and assigns it to the Plugin field.
func (o *PersesPanelSpec) SetPlugin(v PersesPlugin) {
	o.Plugin = &v
}

// GetQueries returns the Queries field value if set, zero value otherwise.
func (o *PersesPanelSpec) GetQueries() []PersesQuery {
	if o == nil || o.Queries == nil {
		var ret []PersesQuery
		return ret
	}
	return o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPanelSpec) GetQueriesOk() ([]PersesQuery, bool) {
	if o == nil || o.Queries == nil {
		return nil, false
	}
	return o.Queries, true
}

// HasQueries returns a boolean if a field has been set.
func (o *PersesPanelSpec) HasQueries() bool {
	if o != nil && o.Queries != nil {
		return true
	}

	return false
}

// SetQueries gets a reference to the given []PersesQuery and assigns it to the Queries field.
func (o *PersesPanelSpec) SetQueries(v []PersesQuery) {
	o.Queries = v
}

func (o PersesPanelSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Plugin != nil {
		toSerialize["plugin"] = o.Plugin
	}
	if o.Queries != nil {
		toSerialize["queries"] = o.Queries
	}
	return json.Marshal(toSerialize)
}

type NullablePersesPanelSpec struct {
	value *PersesPanelSpec
	isSet bool
}

func (v NullablePersesPanelSpec) Get() *PersesPanelSpec {
	return v.value
}

func (v *NullablePersesPanelSpec) Set(val *PersesPanelSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesPanelSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesPanelSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesPanelSpec(val *PersesPanelSpec) *NullablePersesPanelSpec {
	return &NullablePersesPanelSpec{value: val, isSet: true}
}

func (v NullablePersesPanelSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesPanelSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
