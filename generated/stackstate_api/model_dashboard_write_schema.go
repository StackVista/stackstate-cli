/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// DashboardWriteSchema struct for DashboardWriteSchema
type DashboardWriteSchema struct {
	// Name of the dashboard
	Name string `json:"name"`
	// Description of the dashboard
	Description string          `json:"description"`
	Scope       DashboardScope  `json:"scope"`
	Dashboard   PersesDashboard `json:"dashboard"`
}

// NewDashboardWriteSchema instantiates a new DashboardWriteSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardWriteSchema(name string, description string, scope DashboardScope, dashboard PersesDashboard) *DashboardWriteSchema {
	this := DashboardWriteSchema{}
	this.Name = name
	this.Description = description
	this.Scope = scope
	this.Dashboard = dashboard
	return &this
}

// NewDashboardWriteSchemaWithDefaults instantiates a new DashboardWriteSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardWriteSchemaWithDefaults() *DashboardWriteSchema {
	this := DashboardWriteSchema{}
	return &this
}

// GetName returns the Name field value
func (o *DashboardWriteSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DashboardWriteSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DashboardWriteSchema) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *DashboardWriteSchema) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DashboardWriteSchema) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DashboardWriteSchema) SetDescription(v string) {
	o.Description = v
}

// GetScope returns the Scope field value
func (o *DashboardWriteSchema) GetScope() DashboardScope {
	if o == nil {
		var ret DashboardScope
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *DashboardWriteSchema) GetScopeOk() (*DashboardScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *DashboardWriteSchema) SetScope(v DashboardScope) {
	o.Scope = v
}

// GetDashboard returns the Dashboard field value
func (o *DashboardWriteSchema) GetDashboard() PersesDashboard {
	if o == nil {
		var ret PersesDashboard
		return ret
	}

	return o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value
// and a boolean to check if the value has been set.
func (o *DashboardWriteSchema) GetDashboardOk() (*PersesDashboard, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dashboard, true
}

// SetDashboard sets field value
func (o *DashboardWriteSchema) SetDashboard(v PersesDashboard) {
	o.Dashboard = v
}

func (o DashboardWriteSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["dashboard"] = o.Dashboard
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardWriteSchema struct {
	value *DashboardWriteSchema
	isSet bool
}

func (v NullableDashboardWriteSchema) Get() *DashboardWriteSchema {
	return v.value
}

func (v *NullableDashboardWriteSchema) Set(val *DashboardWriteSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardWriteSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardWriteSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardWriteSchema(val *DashboardWriteSchema) *NullableDashboardWriteSchema {
	return &NullableDashboardWriteSchema{value: val, isSet: true}
}

func (v NullableDashboardWriteSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardWriteSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
