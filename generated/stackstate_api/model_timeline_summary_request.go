/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TimelineSummaryRequest struct for TimelineSummaryRequest
type TimelineSummaryRequest struct {
	Arguments TimelineSummaryRequestArguments `json:"arguments"`
	// Date/time representation in milliseconds since epoch (1970-01-01 00:00:00)
	StartTime int32 `json:"startTime"`
	// Date/time representation in milliseconds since epoch (1970-01-01 00:00:00)
	EndTime              *int32        `json:"endTime,omitempty"`
	HistogramBucketCount int32         `json:"histogramBucketCount"`
	EventFilters         *EventFilters `json:"eventFilters,omitempty"`
}

// NewTimelineSummaryRequest instantiates a new TimelineSummaryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineSummaryRequest(arguments TimelineSummaryRequestArguments, startTime int32, histogramBucketCount int32) *TimelineSummaryRequest {
	this := TimelineSummaryRequest{}
	this.Arguments = arguments
	this.StartTime = startTime
	this.HistogramBucketCount = histogramBucketCount
	return &this
}

// NewTimelineSummaryRequestWithDefaults instantiates a new TimelineSummaryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineSummaryRequestWithDefaults() *TimelineSummaryRequest {
	this := TimelineSummaryRequest{}
	return &this
}

// GetArguments returns the Arguments field value
func (o *TimelineSummaryRequest) GetArguments() TimelineSummaryRequestArguments {
	if o == nil {
		var ret TimelineSummaryRequestArguments
		return ret
	}

	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value
// and a boolean to check if the value has been set.
func (o *TimelineSummaryRequest) GetArgumentsOk() (*TimelineSummaryRequestArguments, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arguments, true
}

// SetArguments sets field value
func (o *TimelineSummaryRequest) SetArguments(v TimelineSummaryRequestArguments) {
	o.Arguments = v
}

// GetStartTime returns the StartTime field value
func (o *TimelineSummaryRequest) GetStartTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *TimelineSummaryRequest) GetStartTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *TimelineSummaryRequest) SetStartTime(v int32) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *TimelineSummaryRequest) GetEndTime() int32 {
	if o == nil || o.EndTime == nil {
		var ret int32
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineSummaryRequest) GetEndTimeOk() (*int32, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *TimelineSummaryRequest) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int32 and assigns it to the EndTime field.
func (o *TimelineSummaryRequest) SetEndTime(v int32) {
	o.EndTime = &v
}

// GetHistogramBucketCount returns the HistogramBucketCount field value
func (o *TimelineSummaryRequest) GetHistogramBucketCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HistogramBucketCount
}

// GetHistogramBucketCountOk returns a tuple with the HistogramBucketCount field value
// and a boolean to check if the value has been set.
func (o *TimelineSummaryRequest) GetHistogramBucketCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistogramBucketCount, true
}

// SetHistogramBucketCount sets field value
func (o *TimelineSummaryRequest) SetHistogramBucketCount(v int32) {
	o.HistogramBucketCount = v
}

// GetEventFilters returns the EventFilters field value if set, zero value otherwise.
func (o *TimelineSummaryRequest) GetEventFilters() EventFilters {
	if o == nil || o.EventFilters == nil {
		var ret EventFilters
		return ret
	}
	return *o.EventFilters
}

// GetEventFiltersOk returns a tuple with the EventFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineSummaryRequest) GetEventFiltersOk() (*EventFilters, bool) {
	if o == nil || o.EventFilters == nil {
		return nil, false
	}
	return o.EventFilters, true
}

// HasEventFilters returns a boolean if a field has been set.
func (o *TimelineSummaryRequest) HasEventFilters() bool {
	if o != nil && o.EventFilters != nil {
		return true
	}

	return false
}

// SetEventFilters gets a reference to the given EventFilters and assigns it to the EventFilters field.
func (o *TimelineSummaryRequest) SetEventFilters(v EventFilters) {
	o.EventFilters = &v
}

func (o TimelineSummaryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["arguments"] = o.Arguments
	}
	if true {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if true {
		toSerialize["histogramBucketCount"] = o.HistogramBucketCount
	}
	if o.EventFilters != nil {
		toSerialize["eventFilters"] = o.EventFilters
	}
	return json.Marshal(toSerialize)
}

type NullableTimelineSummaryRequest struct {
	value *TimelineSummaryRequest
	isSet bool
}

func (v NullableTimelineSummaryRequest) Get() *TimelineSummaryRequest {
	return v.value
}

func (v *NullableTimelineSummaryRequest) Set(val *TimelineSummaryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineSummaryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineSummaryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineSummaryRequest(val *TimelineSummaryRequest) *NullableTimelineSummaryRequest {
	return &NullableTimelineSummaryRequest{value: val, isSet: true}
}

func (v NullableTimelineSummaryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineSummaryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
