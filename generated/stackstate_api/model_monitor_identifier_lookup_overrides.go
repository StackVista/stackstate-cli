/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorIdentifierLookupOverrides struct for MonitorIdentifierLookupOverrides
type MonitorIdentifierLookupOverrides struct {
	Components int32 `json:"components"`
	TimeSeries int32 `json:"timeSeries"`
}

// NewMonitorIdentifierLookupOverrides instantiates a new MonitorIdentifierLookupOverrides object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorIdentifierLookupOverrides(components int32, timeSeries int32) *MonitorIdentifierLookupOverrides {
	this := MonitorIdentifierLookupOverrides{}
	this.Components = components
	this.TimeSeries = timeSeries
	return &this
}

// NewMonitorIdentifierLookupOverridesWithDefaults instantiates a new MonitorIdentifierLookupOverrides object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorIdentifierLookupOverridesWithDefaults() *MonitorIdentifierLookupOverrides {
	this := MonitorIdentifierLookupOverrides{}
	return &this
}

// GetComponents returns the Components field value
func (o *MonitorIdentifierLookupOverrides) GetComponents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *MonitorIdentifierLookupOverrides) GetComponentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Components, true
}

// SetComponents sets field value
func (o *MonitorIdentifierLookupOverrides) SetComponents(v int32) {
	o.Components = v
}

// GetTimeSeries returns the TimeSeries field value
func (o *MonitorIdentifierLookupOverrides) GetTimeSeries() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeSeries
}

// GetTimeSeriesOk returns a tuple with the TimeSeries field value
// and a boolean to check if the value has been set.
func (o *MonitorIdentifierLookupOverrides) GetTimeSeriesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeSeries, true
}

// SetTimeSeries sets field value
func (o *MonitorIdentifierLookupOverrides) SetTimeSeries(v int32) {
	o.TimeSeries = v
}

func (o MonitorIdentifierLookupOverrides) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["components"] = o.Components
	}
	if true {
		toSerialize["timeSeries"] = o.TimeSeries
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorIdentifierLookupOverrides struct {
	value *MonitorIdentifierLookupOverrides
	isSet bool
}

func (v NullableMonitorIdentifierLookupOverrides) Get() *MonitorIdentifierLookupOverrides {
	return v.value
}

func (v *NullableMonitorIdentifierLookupOverrides) Set(val *MonitorIdentifierLookupOverrides) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorIdentifierLookupOverrides) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorIdentifierLookupOverrides) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorIdentifierLookupOverrides(val *MonitorIdentifierLookupOverrides) *NullableMonitorIdentifierLookupOverrides {
	return &NullableMonitorIdentifierLookupOverrides{value: val, isSet: true}
}

func (v NullableMonitorIdentifierLookupOverrides) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorIdentifierLookupOverrides) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
