/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// LatestTelemetryStreamMetricsMetric struct for LatestTelemetryStreamMetricsMetric
type LatestTelemetryStreamMetricsMetric struct {
	Timestamp *int64 `json:"timestamp,omitempty"`
	Value *float32 `json:"value,omitempty"`
}

// NewLatestTelemetryStreamMetricsMetric instantiates a new LatestTelemetryStreamMetricsMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestTelemetryStreamMetricsMetric() *LatestTelemetryStreamMetricsMetric {
	this := LatestTelemetryStreamMetricsMetric{}
	return &this
}

// NewLatestTelemetryStreamMetricsMetricWithDefaults instantiates a new LatestTelemetryStreamMetricsMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestTelemetryStreamMetricsMetricWithDefaults() *LatestTelemetryStreamMetricsMetric {
	this := LatestTelemetryStreamMetricsMetric{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *LatestTelemetryStreamMetricsMetric) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestTelemetryStreamMetricsMetric) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *LatestTelemetryStreamMetricsMetric) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *LatestTelemetryStreamMetricsMetric) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *LatestTelemetryStreamMetricsMetric) GetValue() float32 {
	if o == nil || o.Value == nil {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestTelemetryStreamMetricsMetric) GetValueOk() (*float32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *LatestTelemetryStreamMetricsMetric) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *LatestTelemetryStreamMetricsMetric) SetValue(v float32) {
	o.Value = &v
}

func (o LatestTelemetryStreamMetricsMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableLatestTelemetryStreamMetricsMetric struct {
	value *LatestTelemetryStreamMetricsMetric
	isSet bool
}

func (v NullableLatestTelemetryStreamMetricsMetric) Get() *LatestTelemetryStreamMetricsMetric {
	return v.value
}

func (v *NullableLatestTelemetryStreamMetricsMetric) Set(val *LatestTelemetryStreamMetricsMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestTelemetryStreamMetricsMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestTelemetryStreamMetricsMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestTelemetryStreamMetricsMetric(val *LatestTelemetryStreamMetricsMetric) *NullableLatestTelemetryStreamMetricsMetric {
	return &NullableLatestTelemetryStreamMetricsMetric{value: val, isSet: true}
}

func (v NullableLatestTelemetryStreamMetricsMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestTelemetryStreamMetricsMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


