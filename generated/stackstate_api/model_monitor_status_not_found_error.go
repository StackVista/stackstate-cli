/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorStatusNotFoundError struct for MonitorStatusNotFoundError
type MonitorStatusNotFoundError struct {
	Type string `json:"_type"`
	MonitorId int64 `json:"monitorId"`
}

// NewMonitorStatusNotFoundError instantiates a new MonitorStatusNotFoundError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorStatusNotFoundError(type_ string, monitorId int64) *MonitorStatusNotFoundError {
	this := MonitorStatusNotFoundError{}
	this.Type = type_
	this.MonitorId = monitorId
	return &this
}

// NewMonitorStatusNotFoundErrorWithDefaults instantiates a new MonitorStatusNotFoundError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorStatusNotFoundErrorWithDefaults() *MonitorStatusNotFoundError {
	this := MonitorStatusNotFoundError{}
	return &this
}

// GetType returns the Type field value
func (o *MonitorStatusNotFoundError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MonitorStatusNotFoundError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MonitorStatusNotFoundError) SetType(v string) {
	o.Type = v
}

// GetMonitorId returns the MonitorId field value
func (o *MonitorStatusNotFoundError) GetMonitorId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MonitorId
}

// GetMonitorIdOk returns a tuple with the MonitorId field value
// and a boolean to check if the value has been set.
func (o *MonitorStatusNotFoundError) GetMonitorIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonitorId, true
}

// SetMonitorId sets field value
func (o *MonitorStatusNotFoundError) SetMonitorId(v int64) {
	o.MonitorId = v
}

func (o MonitorStatusNotFoundError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["monitorId"] = o.MonitorId
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorStatusNotFoundError struct {
	value *MonitorStatusNotFoundError
	isSet bool
}

func (v NullableMonitorStatusNotFoundError) Get() *MonitorStatusNotFoundError {
	return v.value
}

func (v *NullableMonitorStatusNotFoundError) Set(val *MonitorStatusNotFoundError) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorStatusNotFoundError) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorStatusNotFoundError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorStatusNotFoundError(val *MonitorStatusNotFoundError) *NullableMonitorStatusNotFoundError {
	return &NullableMonitorStatusNotFoundError{value: val, isSet: true}
}

func (v NullableMonitorStatusNotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorStatusNotFoundError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


