/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesTextVariableSpec struct for PersesTextVariableSpec
type PersesTextVariableSpec struct {
	Name     string                     `json:"name"`
	Display  *PersesVariableDisplaySpec `json:"display,omitempty"`
	Value    string                     `json:"value"`
	Constant *bool                      `json:"constant,omitempty"`
}

// NewPersesTextVariableSpec instantiates a new PersesTextVariableSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesTextVariableSpec(name string, value string) *PersesTextVariableSpec {
	this := PersesTextVariableSpec{}
	this.Name = name
	this.Value = value
	return &this
}

// NewPersesTextVariableSpecWithDefaults instantiates a new PersesTextVariableSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesTextVariableSpecWithDefaults() *PersesTextVariableSpec {
	this := PersesTextVariableSpec{}
	return &this
}

// GetName returns the Name field value
func (o *PersesTextVariableSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PersesTextVariableSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PersesTextVariableSpec) SetName(v string) {
	o.Name = v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PersesTextVariableSpec) GetDisplay() PersesVariableDisplaySpec {
	if o == nil || o.Display == nil {
		var ret PersesVariableDisplaySpec
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesTextVariableSpec) GetDisplayOk() (*PersesVariableDisplaySpec, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PersesTextVariableSpec) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given PersesVariableDisplaySpec and assigns it to the Display field.
func (o *PersesTextVariableSpec) SetDisplay(v PersesVariableDisplaySpec) {
	o.Display = &v
}

// GetValue returns the Value field value
func (o *PersesTextVariableSpec) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PersesTextVariableSpec) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PersesTextVariableSpec) SetValue(v string) {
	o.Value = v
}

// GetConstant returns the Constant field value if set, zero value otherwise.
func (o *PersesTextVariableSpec) GetConstant() bool {
	if o == nil || o.Constant == nil {
		var ret bool
		return ret
	}
	return *o.Constant
}

// GetConstantOk returns a tuple with the Constant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesTextVariableSpec) GetConstantOk() (*bool, bool) {
	if o == nil || o.Constant == nil {
		return nil, false
	}
	return o.Constant, true
}

// HasConstant returns a boolean if a field has been set.
func (o *PersesTextVariableSpec) HasConstant() bool {
	if o != nil && o.Constant != nil {
		return true
	}

	return false
}

// SetConstant gets a reference to the given bool and assigns it to the Constant field.
func (o *PersesTextVariableSpec) SetConstant(v bool) {
	o.Constant = &v
}

func (o PersesTextVariableSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if o.Constant != nil {
		toSerialize["constant"] = o.Constant
	}
	return json.Marshal(toSerialize)
}

type NullablePersesTextVariableSpec struct {
	value *PersesTextVariableSpec
	isSet bool
}

func (v NullablePersesTextVariableSpec) Get() *PersesTextVariableSpec {
	return v.value
}

func (v *NullablePersesTextVariableSpec) Set(val *PersesTextVariableSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesTextVariableSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesTextVariableSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesTextVariableSpec(val *PersesTextVariableSpec) *NullablePersesTextVariableSpec {
	return &NullablePersesTextVariableSpec{value: val, isSet: true}
}

func (v NullablePersesTextVariableSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesTextVariableSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
