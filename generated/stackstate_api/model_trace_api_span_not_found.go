/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// TraceApiSpanNotFound struct for TraceApiSpanNotFound
type TraceApiSpanNotFound struct {
	TraceId string `json:"traceId"`
	SpanId  string `json:"spanId"`
}

// NewTraceApiSpanNotFound instantiates a new TraceApiSpanNotFound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceApiSpanNotFound(traceId string, spanId string) *TraceApiSpanNotFound {
	this := TraceApiSpanNotFound{}
	this.TraceId = traceId
	this.SpanId = spanId
	return &this
}

// NewTraceApiSpanNotFoundWithDefaults instantiates a new TraceApiSpanNotFound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceApiSpanNotFoundWithDefaults() *TraceApiSpanNotFound {
	this := TraceApiSpanNotFound{}
	return &this
}

// GetTraceId returns the TraceId field value
func (o *TraceApiSpanNotFound) GetTraceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value
// and a boolean to check if the value has been set.
func (o *TraceApiSpanNotFound) GetTraceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceId, true
}

// SetTraceId sets field value
func (o *TraceApiSpanNotFound) SetTraceId(v string) {
	o.TraceId = v
}

// GetSpanId returns the SpanId field value
func (o *TraceApiSpanNotFound) GetSpanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpanId
}

// GetSpanIdOk returns a tuple with the SpanId field value
// and a boolean to check if the value has been set.
func (o *TraceApiSpanNotFound) GetSpanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpanId, true
}

// SetSpanId sets field value
func (o *TraceApiSpanNotFound) SetSpanId(v string) {
	o.SpanId = v
}

func (o TraceApiSpanNotFound) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["traceId"] = o.TraceId
	}
	if true {
		toSerialize["spanId"] = o.SpanId
	}
	return json.Marshal(toSerialize)
}

type NullableTraceApiSpanNotFound struct {
	value *TraceApiSpanNotFound
	isSet bool
}

func (v NullableTraceApiSpanNotFound) Get() *TraceApiSpanNotFound {
	return v.value
}

func (v *NullableTraceApiSpanNotFound) Set(val *TraceApiSpanNotFound) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceApiSpanNotFound) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceApiSpanNotFound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceApiSpanNotFound(val *TraceApiSpanNotFound) *NullableTraceApiSpanNotFound {
	return &NullableTraceApiSpanNotFound{value: val, isSet: true}
}

func (v NullableTraceApiSpanNotFound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceApiSpanNotFound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
