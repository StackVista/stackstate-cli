/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorCheckStatusRelatedFailuresTopology struct for MonitorCheckStatusRelatedFailuresTopology
type MonitorCheckStatusRelatedFailuresTopology struct {
	Distance int32  `json:"distance"`
	Relation string `json:"relation"`
}

// NewMonitorCheckStatusRelatedFailuresTopology instantiates a new MonitorCheckStatusRelatedFailuresTopology object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorCheckStatusRelatedFailuresTopology(distance int32, relation string) *MonitorCheckStatusRelatedFailuresTopology {
	this := MonitorCheckStatusRelatedFailuresTopology{}
	this.Distance = distance
	this.Relation = relation
	return &this
}

// NewMonitorCheckStatusRelatedFailuresTopologyWithDefaults instantiates a new MonitorCheckStatusRelatedFailuresTopology object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorCheckStatusRelatedFailuresTopologyWithDefaults() *MonitorCheckStatusRelatedFailuresTopology {
	this := MonitorCheckStatusRelatedFailuresTopology{}
	return &this
}

// GetDistance returns the Distance field value
func (o *MonitorCheckStatusRelatedFailuresTopology) GetDistance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresTopology) GetDistanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Distance, true
}

// SetDistance sets field value
func (o *MonitorCheckStatusRelatedFailuresTopology) SetDistance(v int32) {
	o.Distance = v
}

// GetRelation returns the Relation field value
func (o *MonitorCheckStatusRelatedFailuresTopology) GetRelation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Relation
}

// GetRelationOk returns a tuple with the Relation field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresTopology) GetRelationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relation, true
}

// SetRelation sets field value
func (o *MonitorCheckStatusRelatedFailuresTopology) SetRelation(v string) {
	o.Relation = v
}

func (o MonitorCheckStatusRelatedFailuresTopology) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["distance"] = o.Distance
	}
	if true {
		toSerialize["relation"] = o.Relation
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorCheckStatusRelatedFailuresTopology struct {
	value *MonitorCheckStatusRelatedFailuresTopology
	isSet bool
}

func (v NullableMonitorCheckStatusRelatedFailuresTopology) Get() *MonitorCheckStatusRelatedFailuresTopology {
	return v.value
}

func (v *NullableMonitorCheckStatusRelatedFailuresTopology) Set(val *MonitorCheckStatusRelatedFailuresTopology) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorCheckStatusRelatedFailuresTopology) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorCheckStatusRelatedFailuresTopology) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorCheckStatusRelatedFailuresTopology(val *MonitorCheckStatusRelatedFailuresTopology) *NullableMonitorCheckStatusRelatedFailuresTopology {
	return &NullableMonitorCheckStatusRelatedFailuresTopology{value: val, isSet: true}
}

func (v NullableMonitorCheckStatusRelatedFailuresTopology) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorCheckStatusRelatedFailuresTopology) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
