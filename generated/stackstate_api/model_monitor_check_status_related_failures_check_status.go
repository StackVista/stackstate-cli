/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// MonitorCheckStatusRelatedFailuresCheckStatus struct for MonitorCheckStatusRelatedFailuresCheckStatus
type MonitorCheckStatusRelatedFailuresCheckStatus struct {
	Id                 int64                                     `json:"id"`
	Health             HealthStateValue                          `json:"health"`
	Name               string                                    `json:"name"`
	Component          MonitorCheckStatusComponent               `json:"component"`
	Topology           MonitorCheckStatusRelatedFailuresTopology `json:"topology"`
	TriggeredTimestamp int32                                     `json:"triggeredTimestamp"`
}

// NewMonitorCheckStatusRelatedFailuresCheckStatus instantiates a new MonitorCheckStatusRelatedFailuresCheckStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorCheckStatusRelatedFailuresCheckStatus(id int64, health HealthStateValue, name string, component MonitorCheckStatusComponent, topology MonitorCheckStatusRelatedFailuresTopology, triggeredTimestamp int32) *MonitorCheckStatusRelatedFailuresCheckStatus {
	this := MonitorCheckStatusRelatedFailuresCheckStatus{}
	this.Id = id
	this.Health = health
	this.Name = name
	this.Component = component
	this.Topology = topology
	this.TriggeredTimestamp = triggeredTimestamp
	return &this
}

// NewMonitorCheckStatusRelatedFailuresCheckStatusWithDefaults instantiates a new MonitorCheckStatusRelatedFailuresCheckStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorCheckStatusRelatedFailuresCheckStatusWithDefaults() *MonitorCheckStatusRelatedFailuresCheckStatus {
	this := MonitorCheckStatusRelatedFailuresCheckStatus{}
	return &this
}

// GetId returns the Id field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetId(v int64) {
	o.Id = v
}

// GetHealth returns the Health field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetHealth() HealthStateValue {
	if o == nil {
		var ret HealthStateValue
		return ret
	}

	return o.Health
}

// GetHealthOk returns a tuple with the Health field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetHealthOk() (*HealthStateValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Health, true
}

// SetHealth sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetHealth(v HealthStateValue) {
	o.Health = v
}

// GetName returns the Name field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetName(v string) {
	o.Name = v
}

// GetComponent returns the Component field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetComponent() MonitorCheckStatusComponent {
	if o == nil {
		var ret MonitorCheckStatusComponent
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetComponentOk() (*MonitorCheckStatusComponent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetComponent(v MonitorCheckStatusComponent) {
	o.Component = v
}

// GetTopology returns the Topology field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetTopology() MonitorCheckStatusRelatedFailuresTopology {
	if o == nil {
		var ret MonitorCheckStatusRelatedFailuresTopology
		return ret
	}

	return o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetTopologyOk() (*MonitorCheckStatusRelatedFailuresTopology, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Topology, true
}

// SetTopology sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetTopology(v MonitorCheckStatusRelatedFailuresTopology) {
	o.Topology = v
}

// GetTriggeredTimestamp returns the TriggeredTimestamp field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetTriggeredTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TriggeredTimestamp
}

// GetTriggeredTimestampOk returns a tuple with the TriggeredTimestamp field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) GetTriggeredTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggeredTimestamp, true
}

// SetTriggeredTimestamp sets field value
func (o *MonitorCheckStatusRelatedFailuresCheckStatus) SetTriggeredTimestamp(v int32) {
	o.TriggeredTimestamp = v
}

func (o MonitorCheckStatusRelatedFailuresCheckStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["health"] = o.Health
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["component"] = o.Component
	}
	if true {
		toSerialize["topology"] = o.Topology
	}
	if true {
		toSerialize["triggeredTimestamp"] = o.TriggeredTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorCheckStatusRelatedFailuresCheckStatus struct {
	value *MonitorCheckStatusRelatedFailuresCheckStatus
	isSet bool
}

func (v NullableMonitorCheckStatusRelatedFailuresCheckStatus) Get() *MonitorCheckStatusRelatedFailuresCheckStatus {
	return v.value
}

func (v *NullableMonitorCheckStatusRelatedFailuresCheckStatus) Set(val *MonitorCheckStatusRelatedFailuresCheckStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorCheckStatusRelatedFailuresCheckStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorCheckStatusRelatedFailuresCheckStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorCheckStatusRelatedFailuresCheckStatus(val *MonitorCheckStatusRelatedFailuresCheckStatus) *NullableMonitorCheckStatusRelatedFailuresCheckStatus {
	return &NullableMonitorCheckStatusRelatedFailuresCheckStatus{value: val, isSet: true}
}

func (v NullableMonitorCheckStatusRelatedFailuresCheckStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorCheckStatusRelatedFailuresCheckStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
