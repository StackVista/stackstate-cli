/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// NewServiceTokenRequest struct for NewServiceTokenRequest
type NewServiceTokenRequest struct {
	Name             string   `json:"name"`
	ExpiryDate       *int64   `json:"expiryDate,omitempty"`
	Roles            []string `json:"roles"`
	DedicatedSubject *string  `json:"dedicatedSubject,omitempty"`
}

// NewNewServiceTokenRequest instantiates a new NewServiceTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewServiceTokenRequest(name string, roles []string) *NewServiceTokenRequest {
	this := NewServiceTokenRequest{}
	this.Name = name
	this.Roles = roles
	return &this
}

// NewNewServiceTokenRequestWithDefaults instantiates a new NewServiceTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewServiceTokenRequestWithDefaults() *NewServiceTokenRequest {
	this := NewServiceTokenRequest{}
	return &this
}

// GetName returns the Name field value
func (o *NewServiceTokenRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NewServiceTokenRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NewServiceTokenRequest) SetName(v string) {
	o.Name = v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *NewServiceTokenRequest) GetExpiryDate() int64 {
	if o == nil || o.ExpiryDate == nil {
		var ret int64
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewServiceTokenRequest) GetExpiryDateOk() (*int64, bool) {
	if o == nil || o.ExpiryDate == nil {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *NewServiceTokenRequest) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate != nil {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given int64 and assigns it to the ExpiryDate field.
func (o *NewServiceTokenRequest) SetExpiryDate(v int64) {
	o.ExpiryDate = &v
}

// GetRoles returns the Roles field value
func (o *NewServiceTokenRequest) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *NewServiceTokenRequest) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *NewServiceTokenRequest) SetRoles(v []string) {
	o.Roles = v
}

// GetDedicatedSubject returns the DedicatedSubject field value if set, zero value otherwise.
func (o *NewServiceTokenRequest) GetDedicatedSubject() string {
	if o == nil || o.DedicatedSubject == nil {
		var ret string
		return ret
	}
	return *o.DedicatedSubject
}

// GetDedicatedSubjectOk returns a tuple with the DedicatedSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewServiceTokenRequest) GetDedicatedSubjectOk() (*string, bool) {
	if o == nil || o.DedicatedSubject == nil {
		return nil, false
	}
	return o.DedicatedSubject, true
}

// HasDedicatedSubject returns a boolean if a field has been set.
func (o *NewServiceTokenRequest) HasDedicatedSubject() bool {
	if o != nil && o.DedicatedSubject != nil {
		return true
	}

	return false
}

// SetDedicatedSubject gets a reference to the given string and assigns it to the DedicatedSubject field.
func (o *NewServiceTokenRequest) SetDedicatedSubject(v string) {
	o.DedicatedSubject = &v
}

func (o NewServiceTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ExpiryDate != nil {
		toSerialize["expiryDate"] = o.ExpiryDate
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	if o.DedicatedSubject != nil {
		toSerialize["dedicatedSubject"] = o.DedicatedSubject
	}
	return json.Marshal(toSerialize)
}

type NullableNewServiceTokenRequest struct {
	value *NewServiceTokenRequest
	isSet bool
}

func (v NullableNewServiceTokenRequest) Get() *NewServiceTokenRequest {
	return v.value
}

func (v *NullableNewServiceTokenRequest) Set(val *NewServiceTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewServiceTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewServiceTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewServiceTokenRequest(val *NewServiceTokenRequest) *NullableNewServiceTokenRequest {
	return &NullableNewServiceTokenRequest{value: val, isSet: true}
}

func (v NullableNewServiceTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewServiceTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
