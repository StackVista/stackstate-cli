/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// ComponentNotFoundError struct for ComponentNotFoundError
type ComponentNotFoundError struct {
	Type string `json:"_type"`
	ComponentId int64 `json:"componentId"`
}

// NewComponentNotFoundError instantiates a new ComponentNotFoundError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentNotFoundError(type_ string, componentId int64) *ComponentNotFoundError {
	this := ComponentNotFoundError{}
	this.Type = type_
	this.ComponentId = componentId
	return &this
}

// NewComponentNotFoundErrorWithDefaults instantiates a new ComponentNotFoundError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentNotFoundErrorWithDefaults() *ComponentNotFoundError {
	this := ComponentNotFoundError{}
	return &this
}

// GetType returns the Type field value
func (o *ComponentNotFoundError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ComponentNotFoundError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ComponentNotFoundError) SetType(v string) {
	o.Type = v
}

// GetComponentId returns the ComponentId field value
func (o *ComponentNotFoundError) GetComponentId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value
// and a boolean to check if the value has been set.
func (o *ComponentNotFoundError) GetComponentIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentId, true
}

// SetComponentId sets field value
func (o *ComponentNotFoundError) SetComponentId(v int64) {
	o.ComponentId = v
}

func (o ComponentNotFoundError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_type"] = o.Type
	}
	if true {
		toSerialize["componentId"] = o.ComponentId
	}
	return json.Marshal(toSerialize)
}

type NullableComponentNotFoundError struct {
	value *ComponentNotFoundError
	isSet bool
}

func (v NullableComponentNotFoundError) Get() *ComponentNotFoundError {
	return v.value
}

func (v *NullableComponentNotFoundError) Set(val *ComponentNotFoundError) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentNotFoundError) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentNotFoundError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentNotFoundError(val *ComponentNotFoundError) *NullableComponentNotFoundError {
	return &NullableComponentNotFoundError{value: val, isSet: true}
}

func (v NullableComponentNotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentNotFoundError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


