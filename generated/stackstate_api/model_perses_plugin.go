/*
StackState API

This API documentation page describes the StackState server API. The StackState UI and CLI use the StackState server API to configure and query StackState.  You can use the API for similar purposes.  Each request sent to the StackState server API must be authenticated using one of the available authentication methods.   *Note that the StackState receiver API, used to send topology, telemetry and traces to StackState, is not described on this page and requires a different authentication method.*  For more information on StackState, refer to the [StackState documentation](https://docs.stackstate.com).

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// PersesPlugin struct for PersesPlugin
type PersesPlugin struct {
	Kind *string                `json:"kind,omitempty"`
	Spec map[string]interface{} `json:"spec,omitempty"`
}

// NewPersesPlugin instantiates a new PersesPlugin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersesPlugin() *PersesPlugin {
	this := PersesPlugin{}
	return &this
}

// NewPersesPluginWithDefaults instantiates a new PersesPlugin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersesPluginWithDefaults() *PersesPlugin {
	this := PersesPlugin{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *PersesPlugin) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPlugin) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *PersesPlugin) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *PersesPlugin) SetKind(v string) {
	o.Kind = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *PersesPlugin) GetSpec() map[string]interface{} {
	if o == nil || o.Spec == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersesPlugin) GetSpecOk() (map[string]interface{}, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *PersesPlugin) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given map[string]interface{} and assigns it to the Spec field.
func (o *PersesPlugin) SetSpec(v map[string]interface{}) {
	o.Spec = v
}

func (o PersesPlugin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullablePersesPlugin struct {
	value *PersesPlugin
	isSet bool
}

func (v NullablePersesPlugin) Get() *PersesPlugin {
	return v.value
}

func (v *NullablePersesPlugin) Set(val *PersesPlugin) {
	v.value = val
	v.isSet = true
}

func (v NullablePersesPlugin) IsSet() bool {
	return v.isSet
}

func (v *NullablePersesPlugin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersesPlugin(val *PersesPlugin) *NullablePersesPlugin {
	return &NullablePersesPlugin{value: val, isSet: true}
}

func (v NullablePersesPlugin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersesPlugin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
