/*
StackState API

StackState's API specification

API version: 0.0.1
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackstate_api

import (
	"encoding/json"
)

// InvalidMonitorIdentifierError struct for InvalidMonitorIdentifierError
type InvalidMonitorIdentifierError struct {
	MonitorIdOrUrn string `json:"monitorIdOrUrn"`
	Type string `json:"_type"`
}

// NewInvalidMonitorIdentifierError instantiates a new InvalidMonitorIdentifierError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvalidMonitorIdentifierError(monitorIdOrUrn string, type_ string) *InvalidMonitorIdentifierError {
	this := InvalidMonitorIdentifierError{}
	this.MonitorIdOrUrn = monitorIdOrUrn
	this.Type = type_
	return &this
}

// NewInvalidMonitorIdentifierErrorWithDefaults instantiates a new InvalidMonitorIdentifierError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvalidMonitorIdentifierErrorWithDefaults() *InvalidMonitorIdentifierError {
	this := InvalidMonitorIdentifierError{}
	return &this
}

// GetMonitorIdOrUrn returns the MonitorIdOrUrn field value
func (o *InvalidMonitorIdentifierError) GetMonitorIdOrUrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MonitorIdOrUrn
}

// GetMonitorIdOrUrnOk returns a tuple with the MonitorIdOrUrn field value
// and a boolean to check if the value has been set.
func (o *InvalidMonitorIdentifierError) GetMonitorIdOrUrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonitorIdOrUrn, true
}

// SetMonitorIdOrUrn sets field value
func (o *InvalidMonitorIdentifierError) SetMonitorIdOrUrn(v string) {
	o.MonitorIdOrUrn = v
}

// GetType returns the Type field value
func (o *InvalidMonitorIdentifierError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InvalidMonitorIdentifierError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InvalidMonitorIdentifierError) SetType(v string) {
	o.Type = v
}

func (o InvalidMonitorIdentifierError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["monitorIdOrUrn"] = o.MonitorIdOrUrn
	}
	if true {
		toSerialize["_type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInvalidMonitorIdentifierError struct {
	value *InvalidMonitorIdentifierError
	isSet bool
}

func (v NullableInvalidMonitorIdentifierError) Get() *InvalidMonitorIdentifierError {
	return v.value
}

func (v *NullableInvalidMonitorIdentifierError) Set(val *InvalidMonitorIdentifierError) {
	v.value = val
	v.isSet = true
}

func (v NullableInvalidMonitorIdentifierError) IsSet() bool {
	return v.isSet
}

func (v *NullableInvalidMonitorIdentifierError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvalidMonitorIdentifierError(val *InvalidMonitorIdentifierError) *NullableInvalidMonitorIdentifierError {
	return &NullableInvalidMonitorIdentifierError{value: val, isSet: true}
}

func (v NullableInvalidMonitorIdentifierError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvalidMonitorIdentifierError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


