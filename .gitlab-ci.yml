stages:
  - setup
  - check
  - deploy

nix_checksum:
  stage: .pre
  image: busybox:1.35.0
  artifacts:
    reports:
      dotenv: ci.env
  rules:
    - when: always
  script:
    - echo "NIX_CHECKSUM=$(cat flake.* | md5sum | awk '{print $1}')" >> ci.env

publish_base_image:
  stage: setup
  image: "nixos/nix:2.8.0"
  services:
    - name: docker:20.10.14-dind
  variables:
    NIX_CONFIG: "experimental-features = nix-command flakes"
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    CI_BASE_IMAGE_PUSH: quay.io/stackstate/sts-ci-images:stackstate-cli2-${NIX_CHECKSUM}
  rules:
    - changes:
      - flake.lock
      - flake.nix
  script:
    - nix profile install nixpkgs#docker
    - echo "${quay_password}" | docker login --username=${quay_user} --password-stdin quay.io
    - nix build .#ci-image
    - docker load < result
    - docker tag stackstate-cli2-ci:latest $CI_BASE_IMAGE_PUSH
    - docker push $CI_BASE_IMAGE_PUSH

.go-base:
  image:
    name: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-cli2-${NIX_CHECKSUM}
    entrypoint: [""]
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    GOCACHE: $CI_PROJECT_DIR/.gocache
    GITLAB_TOKEN: ${gitlab_api_scope_token}
  before_script:
  cache:
    paths:
      - .go/pkg/mod/
      - .gocache
  tags:
    - sts-k8s-xl-runner

lint:
  extends: .go-base
  stage: check
  rules:
    - when: always
  script:
    - scripts/lint.sh

check_stackstate_api_up-to-date:
  extends: .go-base
  stage: check
  rules:
    - changes:
      - stackstate_openapi/**
  script:
    - ./scripts/check_stackstate_api_up-to-date.sh

license_scanning:
  stage: check
  image: "registry.gitlab.com/gitlab-org/security-products/analyzers/license-finder:3"
  rules:
    - changes:
      - .gitlab-ci.yml
      - go.mod
      - go.sum
      - flake.nix
      - flake.lock
  variables:
    LM_REPORT_VERSION: '2.1'
  allow_failure: true
  script:
    - /run.sh analyze .
  artifacts:
    reports:
      license_scanning: gl-license-scanning-report.json

dependency_scanning:
  stage: check
  image: "registry.gitlab.com/gitlab-org/security-products/analyzers/gemnasium:2"
  rules:
    - changes:
      - .gitlab-ci.yml
      - go.mod
      - go.sum
      - flake.nix
      - flake.lock
  script:
    - /analyzer run
  allow_failure: true
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

goreleaser_check:
  extends: .go-base
  stage: check
  rules:
    - changes:
      - .gitlab-ci.yml
      - .goreleaser.yml
  script:
    - goreleaser check

compile_test:
  extends: .go-base
  stage: check
  rules:
    - when: always
  script:
    - go test ./... -v

publish:
  stage: deploy
  extends: .go-base
  services:
    - name: docker:20.10.14-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - scripts/publish.sh
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]*/'
      when: on_success
    - when: never      